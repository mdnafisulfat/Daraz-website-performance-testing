<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="tc_daraZ" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">daraz.com.bd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">member.daraz.com.bd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">acs-m.daraz.com.bd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">cart.daraz.com.bd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">my.daraz.com.bd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">ase.aliexpress.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">umlazada.alibaba.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_8" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_8</stringProp>
            <stringProp name="Argument.value">www.daraz.com.bd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_9" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_9</stringProp>
            <stringProp name="Argument.value">analytics.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_10" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_10</stringProp>
            <stringProp name="Argument.value">www.google-analytics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_11" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_11</stringProp>
            <stringProp name="Argument.value">stats.g.doubleclick.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_12" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_12</stringProp>
            <stringProp name="Argument.value">px-intl.ucweb.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://daraz.com.bd/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1727253240048&amp;sign=a304045f1e98c3fde24eb96da930677a&amp;api=mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService&amp;v=1.0&amp;jsonpIncPrefix=kangaroo&amp;timeout=8000&amp;isSec=1&amp;type=originaljson&amp;dataType=jsonp" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253240048</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">a304045f1e98c3fde24eb96da930677a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonpIncPrefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonpIncPrefix</stringProp>
                  <stringProp name="Argument.value">kangaroo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1727253240048&amp;sign=a304045f1e98c3fde24eb96da930677a&amp;api=mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService&amp;v=1.0&amp;jsonpIncPrefix=kangaroo&amp;timeout=8000&amp;isSec=1&amp;type=originaljson&amp;dataType=jsonp" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253240048</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">a304045f1e98c3fde24eb96da930677a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonpIncPrefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonpIncPrefix</stringProp>
                  <stringProp name="Argument.value">kangaroo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;backupParams&quot;:&quot;currency,regionId,language,device&quot;,&quot;url&quot;:&quot;https://pages.daraz.com.bd/wow/gcp/route/daraz/bd/upr/router?hybrid=1&amp;data_prefetch=true&amp;prefetch_replace=1&amp;at_iframe=1&amp;wh_pid=/lazada/channel/bd/homepage/home&quot;,&quot;device&quot;:&quot;pc&quot;,&quot;regionId&quot;:&quot;bd&quot;,&quot;language&quot;:&quot;en&quot;,&quot;currency&quot;:&quot;bdt&quot;,&quot;sequence&quot;:1,&quot;extParam&quot;:&quot;{\&quot;screenHeight\&quot;:695,\&quot;screenWidth\&quot;:1536,\&quot;platform\&quot;:\&quot;pc\&quot;}&quot;,&quot;pvuuid&quot;:&quot;&quot;,&quot;cookie&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253242095&amp;sign=eaf3ac2e748cdb436a5fc757dc5d5315&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22BD%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%22vjhkH24crl4CAXazEh71JJEn%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;appId&quot;:&quot;41701&quot;,&quot;params&quot;:&quot;{\&quot;appId\&quot;:\&quot;41701\&quot;,\&quot;isbackup\&quot;:true,\&quot;newTileEnable\&quot;:true,\&quot;language\&quot;:\&quot;en\&quot;,\&quot;region_id\&quot;:\&quot;BD\&quot;,\&quot;platform\&quot;:\&quot;pc\&quot;,\&quot;scene\&quot;:\&quot;homepage\&quot;,\&quot;appVersion\&quot;:\&quot;7.48.0\&quot;,\&quot;anonymous_id\&quot;:\&quot;vjhkH24crl4CAXazEh71JJEn\&quot;,\&quot;pageSize\&quot;:50,\&quot;userId\&quot;:0,\&quot;pageNo\&quot;:0}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">eaf3ac2e748cdb436a5fc757dc5d5315</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253242095</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.relationrecommend.LazadaRecommend.recommend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-uid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253242095&amp;sign=eaf3ac2e748cdb436a5fc757dc5d5315&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22BD%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%22vjhkH24crl4CAXazEh71JJEn%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;appId&quot;:&quot;41701&quot;,&quot;params&quot;:&quot;{\&quot;appId\&quot;:\&quot;41701\&quot;,\&quot;isbackup\&quot;:true,\&quot;newTileEnable\&quot;:true,\&quot;language\&quot;:\&quot;en\&quot;,\&quot;region_id\&quot;:\&quot;BD\&quot;,\&quot;platform\&quot;:\&quot;pc\&quot;,\&quot;scene\&quot;:\&quot;homepage\&quot;,\&quot;appVersion\&quot;:\&quot;7.48.0\&quot;,\&quot;anonymous_id\&quot;:\&quot;vjhkH24crl4CAXazEh71JJEn\&quot;,\&quot;pageSize\&quot;:50,\&quot;userId\&quot;:0,\&quot;pageNo\&quot;:0}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">eaf3ac2e748cdb436a5fc757dc5d5315</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253242095</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.relationrecommend.LazadaRecommend.recommend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263183&amp;sign=f2e64b5fc1c251d9e551ddcc84452210&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">f2e64b5fc1c251d9e551ddcc84452210</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263183</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263183&amp;sign=f2e64b5fc1c251d9e551ddcc84452210&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">f2e64b5fc1c251d9e551ddcc84452210</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263183</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263524&amp;sign=2ef645c4e19ea57892fe94cce15f507f&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_764%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_764&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">2ef645c4e19ea57892fe94cce15f507f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263524</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263524&amp;sign=e532a051def7ed3f350c2521ffa41f5d&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">e532a051def7ed3f350c2521ffa41f5d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263524</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263524&amp;sign=2ef645c4e19ea57892fe94cce15f507f&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_764%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_764&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">2ef645c4e19ea57892fe94cce15f507f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263524</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263524&amp;sign=e532a051def7ed3f350c2521ffa41f5d&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">e532a051def7ed3f350c2521ffa41f5d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263524</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fDb3BCjefQ6f58+DWPJdTF8G9UNDg6h3Ghx+J/efzCaSOd+UGQs09zJS5utfVqIzGfYml41s7+F/4YjlLL8n5Ig3lzVtrIwLffxu1sfgeN9j0g24ThfjEYXKB3AfXmgsqtqV35pdRf3u2NbieZKKfNLktJd/6SPWYwHBVAlIKfqDWSGnXaDxwdmn5SGnxWpXffjq5P4wdjzCWPYnsoPIDSx8eQ8f08jaHs2gWF34uoWI23/53R0E2Nl7PjVz3pNzmgy/rqC6x0ISSRc/ICxFCdAeacSfPqEC3ySpaP64E9lnYVguDpHq3yySllrCcz2wP8P6OniXKffUKZn8lOfJUlRQ6nKZJ5FMBZ0u1VZxVGxoIEt7M19VsmDnRl9OVPSFOYCuuRd18qAMdX+AJjzwvvJ7gnuuRBkfCAppDU85EtY1W80ii2PhGK6QXg1pU5WvhAtYUoAOcCrd1Sp78VF4nfNCUCsuJZz+EijMX/AdDLxoXRIwKpbzhUV7aVBaOKp1YdmlaF9scgKyAlqFdTp4DNqw22MfQP57nLMgaQEym+5MFC9pnpt2x7ArBkd4ek+5tHpRw09Sfqz2g+kIobo5GVIIdxJRBXtqZ2WylSysrU9PC3eOtHmodWgkLG6++rcoutVmbpl89Bo0oGqzlesnFen5dyt/DZ6B8/EDLDjqkXegai0Jws3om63m54AUlj7POJh4Sp1P6IwPTUNmImtvfRgo4ae6PIQ2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263846&amp;sign=7084b6373a996d3f9daa40be453af469&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">7084b6373a996d3f9daa40be453af469</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263846</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253263846&amp;sign=7084b6373a996d3f9daa40be453af469&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">7084b6373a996d3f9daa40be453af469</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253263846</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.com.bd/products/-i279137603-s1819640531.html?scm=1007.51657.380827.0&amp;pvid=d68bb710-16ca-439f-88aa-cde6420e0fac&amp;search=flashsale&amp;spm=a2a0e.tm80335411.FlashSale.d_279137603" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">products/-i279137603-s1819640531.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2a0e.tm80335411.FlashSale.d_279137603</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search</stringProp>
                  <stringProp name="Argument.value">flashsale</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pvid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pvid</stringProp>
                  <stringProp name="Argument.value">d68bb710-16ca-439f-88aa-cde6420e0fac</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scm</stringProp>
                  <stringProp name="Argument.value">1007.51657.380827.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">77206.0</stringProp>
              <stringProp name="ConstantTimer.delay">38603</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 77206 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.global.detail.web.getdetailinfo/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253315050&amp;sign=e8f178ed9aecde7155231148a7466713&amp;api=mtop.global.detail.web.getDetailInfo&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;traffic=drz-replatform&amp;appkey=24677475" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.global.detail.web.getdetailinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">e8f178ed9aecde7155231148a7466713</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253315050</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.global.detail.web.getDetailInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-uid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.global.detail.web.getdetailinfo/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253315050&amp;sign=e8f178ed9aecde7155231148a7466713&amp;api=mtop.global.detail.web.getDetailInfo&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;traffic=drz-replatform&amp;appkey=24677475" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.global.detail.web.getdetailinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">e8f178ed9aecde7155231148a7466713</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253315050</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.global.detail.web.getDetailInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;deviceType&quot;:&quot;pc&quot;,&quot;path&quot;:&quot;https://www.daraz.com.bd/products/-i279137603-s1819640531.html?scm=1007.51657.380827.0&amp;pvid=d68bb710-16ca-439f-88aa-cde6420e0fac&amp;search=flashsale&amp;spm=a2a0e.tm80335411.FlashSale.d_279137603&quot;,&quot;uri&quot;:&quot;-i279137603-s1819640531&quot;,&quot;headerParams&quot;:&quot;{\&quot;user-agent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36\&quot;}&quot;,&quot;cookieParams&quot;:&quot;{\&quot;__wpkreporterwid_\&quot;:\&quot;54c01978-e6ae-4873-0f1c-a7821d40f195\&quot;,\&quot;hng\&quot;:\&quot;BD|en-BD|BDT|050\&quot;,\&quot;hng.sig\&quot;:\&quot;hrXJqhBsDIGSIOikIDtmEkq5sZtjwe7EVJSflUvYo1Q\&quot;,\&quot;lwrid\&quot;:\&quot;AgGR0GvoxpMnfz7JDyvIX39uI3lp\&quot;,\&quot;lzd_cid\&quot;:\&quot;82f8cd5a-442d-49a2-89cb-4dc0fb5540f3\&quot;,\&quot;cna\&quot;:\&quot;vjhkH24crl4CAXazEh71JJEn\&quot;,\&quot;t_fv\&quot;:\&quot;1726594101212\&quot;,\&quot;t_uid\&quot;:\&quot;kC587HTgwQpZgmoFPnLpTCBLKuwMCUyi\&quot;,\&quot;__itrace_wid\&quot;:\&quot;5b8e5625-5ba2-429f-91bc-1ecc795bb707\&quot;,\&quot;t_sid\&quot;:\&quot;lTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H\&quot;,\&quot;utm_channel\&quot;:\&quot;SEO\&quot;,\&quot;_m_h5_tk\&quot;:\&quot;0d53237df7fe33fba656abd6547076e4_1727261915736\&quot;,\&quot;_m_h5_tk_enc\&quot;:\&quot;ba9465106020fc63f1295f28c16a9473\&quot;,\&quot;glo_holmes_x\&quot;:\&quot;%7B%22aff_cid%22%3A%2296c5866cf7be42c1aefe510e132d2740-1727252555846-01333-_7agwc%22%2C%22ts%22%3A1727252555846%7D\&quot;,\&quot;xlly_s\&quot;:\&quot;1\&quot;,\&quot;_gcl_au\&quot;:\&quot;1.1.421324743.1727252646\&quot;,\&quot;_gid\&quot;:\&quot;GA1.3.1873385393.1727252646\&quot;,\&quot;_fbp\&quot;:\&quot;fb.2.1727252646530.754978582707716676\&quot;,\&quot;_tt_enable_cookie\&quot;:\&quot;1\&quot;,\&quot;_ttp\&quot;:\&quot;hYDUY-Dcwb5jUz0sVuZB8GiIEvO\&quot;,\&quot;lzd_uid\&quot;:\&quot;700000238955\&quot;,\&quot;utm_origin\&quot;:\&quot;https://member.daraz.com.bd/\&quot;,\&quot;lzd_uti\&quot;:\&quot;%7B%22fpd%22%3A%229999-99-99%22%2C%22lpd%22%3A%229999-99-99%22%2C%22cnt%22%3A%220%22%7D\&quot;,\&quot;_ga\&quot;:\&quot;GA1.1.1488798933.1727252646\&quot;,\&quot;_ga_PC3XY01BZ9\&quot;:\&quot;GS1.1.1727252646.1.1.1727253002.60.0.1036732998\&quot;,\&quot;epssw\&quot;:\&quot;5*mmLm0mhndN6xgV0k4myH3XVDf0eVo3cammmK0Hn7tWmhBU-_A5demt8qsZofprCRbFl8htGQGsqlW2xgsA5mmQDu0d5iuUCFmY5hIlQ0aSitWEmNWTEEdgSrTlaldShV3C8mmmQms2l-zS5eFP6gFhwzzr58xyGYgaIhDisU3QqViugB8JBSrX52HHhmmmmmJcfu3ivbbNCfP8v8sNScm1-MFHPzhVWrbReWmNHzzU_Qe8EVVNm.\&quot;,\&quot;tfstk\&quot;:\&quot;gbkIhXVHZwbIxV1EMLKaGYnZuN2SR49qpgZ-m0BF2JedyanY7Y-3aBA-143gT7dkrVas-0FKa4R3ygaZqH2yxYGGFmmoLH2yxJm3E8L2uKuSxD2lluWoFvwOXomOekBJ3PF5N9T2uKJqvzNcUElz7V09Cu4Tv9ELwh1Txuy8vzEpfPE7m_C-y8K6fuZVywB8ydIT4oe8y4eJfRErKB8_jBaKAhbpvQ5X-KiT5TB-Clt3kDNujlk_nWUYRrW-AAZQOrnIK5GcVlHZCSPN4I2tmfuLf-9cJzlZcYGxxn1QuXn0GjPN71uj8Vk__XOlxPhsXjrtpn5g7fESmRMMY1qiguetpjsRecwITSEtJw6-P2uZC5lBZM4t1ch46fYCsyH324VmUEX3J0nmnjyXnwUr_mMSNgS13rGcd_s_iTZ_uht1Z_ctPIQHhBb4JWEgbx-6fw1u9lq_uht1Z_VLjlP2fh_CZ\&quot;,\&quot;isg\&quot;:\&quot;BCwsc72dZgxJRnIefOHSEZ40_Qpe5dCPltdNnoZtBldwkc2brvUYHoAgtEEpLQjn\&quot;}&quot;,&quot;requestParams&quot;:&quot;{\&quot;scm\&quot;:\&quot;1007.51657.380827.0\&quot;,\&quot;pvid\&quot;:\&quot;d68bb710-16ca-439f-88aa-cde6420e0fac\&quot;,\&quot;search\&quot;:\&quot;flashsale\&quot;,\&quot;spm\&quot;:\&quot;a2a0e.tm80335411.FlashSale.d_279137603\&quot;}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://analytics.google.com/g/collect?v=2&amp;tid=G-PC3XY01BZ9&amp;gtm=45je49n0v887607317z879511387za200zb79511387&amp;_p=1727253313210&amp;_gaz=1&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;dma=0&amp;tag_exp=0&amp;cid=1488798933.1727252646&amp;ecid=1036732998&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B129.0.6668.59%7CNot%253DA%253FBrand%3B8.0.0.0%7CChromium%3B129.0.6668.59&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=15.0.0&amp;uaw=0&amp;are=1&amp;pae=1&amp;frm=0&amp;pscdl=noapi&amp;_s=1&amp;sid=1727252646&amp;sct=1&amp;seg=1&amp;dl=https%3A%2F%2Fwww.daraz.com.bd%2Fproducts%2F-i279137603-s1819640531.html%3Fscm%3D1007.51657.380827.0%26pvid%3Dd68bb710-16ca-439f-88aa-cde6420e0fac%26search%3Dflashsale%26spm%3Da2a0e.tm80335411.FlashSale.d_279137603&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;dt=Hand%20Grip%20%2C%20Heavy%20gripper%20%2C%20Gym%20Grip%20%7C%20Daraz.com.bd&amp;en=page_view&amp;tfd=5332" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/products/-i279137603-s1819640531.html?scm=1007.51657.380827.0&amp;pvid=d68bb710-16ca-439f-88aa-cde6420e0fac&amp;search=flashsale&amp;spm=a2a0e.tm80335411.FlashSale.d_279137603</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gaz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gaz</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-PC3XY01BZ9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;129.0.6668.59|Not%3DA%3FBrand;8.0.0.0|Chromium;129.0.6668.59</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Hand Grip , Heavy gripper , Gym Grip | Daraz.com.bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="are" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">are</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ecid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ecid</stringProp>
                  <stringProp name="Argument.value">1036732998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="npa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">npa</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="frm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">frm</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je49n0v887607317z879511387za200zb79511387</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">15.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pscdl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pscdl</stringProp>
                  <stringProp name="Argument.value">noapi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">page_view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">1727253313210</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfd</stringProp>
                  <stringProp name="Argument.value">5332</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CK61yQEIlrbJAQiktskBCKmdygEIy4zLAQiWocsBCICZzQEIhaDNAQ==</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/j/collect?v=1&amp;_v=j101&amp;a=1765906944&amp;t=event&amp;ni=0&amp;_s=1&amp;dl=https%3A%2F%2Fwww.daraz.com.bd%2Fproducts%2F-i279137603-s1819640531.html%3Fscm%3D1007.51657.380827.0%26pvid%3Dd68bb710-16ca-439f-88aa-cde6420e0fac%26search%3Dflashsale%26spm%3Da2a0e.tm80335411.FlashSale.d_279137603&amp;ul=en-us&amp;de=UTF-8&amp;dt=Hand%20Grip%20%2C%20Heavy%20gripper%20%2C%20Gym%20Grip%20%7C%20Daraz.com.bd&amp;sd=24-bit&amp;sr=1536x864&amp;vp=1519x678&amp;je=0&amp;ec=UAT&amp;ea=UAT&amp;el=UAT&amp;_u=QACAAAABAAAAAC~&amp;jid=1466325803&amp;gjid=2056195720&amp;cid=1488798933.1727252646&amp;tid=UA-53331019-1&amp;_gid=1873385393.1727252646&amp;_r=1&amp;_slc=1&amp;gtm=45He49n0n81M2M4QT3v79511387za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=0&amp;z=1837682557" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">1466325803</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_slc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_slc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/products/-i279137603-s1819640531.html?scm=1007.51657.380827.0&amp;pvid=d68bb710-16ca-439f-88aa-cde6420e0fac&amp;search=flashsale&amp;spm=a2a0e.tm80335411.FlashSale.d_279137603</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">2056195720</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-53331019-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Hand Grip , Heavy gripper , Gym Grip | Daraz.com.bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ea" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ea</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1765906944</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45He49n0n81M2M4QT3v79511387za200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="el" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">el</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1873385393.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">event</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">QACAAAABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1519x678</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1837682557</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ni" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ni</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253316871&amp;sign=54d9a8c86863839776d89246e64786c5&amp;api=mtop.lazada.guided.shopping.categories.categoriesLpCommon&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;appkey=24677475&amp;data=%7B%22regionId%22%3A%22BD%22%2C%22language%22%3A%22en%22%2C%22platform%22%3A%22pc%22%2C%22isbackup%22%3A%22true%22%2C%22backupParams%22%3A%22language%2CregionID%2Cplatform%2CpageNo%22%2C%22moduleName%22%3A%22categoriesLpMultiFloor%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;regionId&quot;:&quot;BD&quot;,&quot;language&quot;:&quot;en&quot;,&quot;platform&quot;:&quot;pc&quot;,&quot;isbackup&quot;:&quot;true&quot;,&quot;backupParams&quot;:&quot;language,regionID,platform,pageNo&quot;,&quot;moduleName&quot;:&quot;categoriesLpMultiFloor&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">54d9a8c86863839776d89246e64786c5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253316871</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.guided.shopping.categories.categoriesLpCommon</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-uid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253316871&amp;sign=54d9a8c86863839776d89246e64786c5&amp;api=mtop.lazada.guided.shopping.categories.categoriesLpCommon&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;appkey=24677475&amp;data=%7B%22regionId%22%3A%22BD%22%2C%22language%22%3A%22en%22%2C%22platform%22%3A%22pc%22%2C%22isbackup%22%3A%22true%22%2C%22backupParams%22%3A%22language%2CregionID%2Cplatform%2CpageNo%22%2C%22moduleName%22%3A%22categoriesLpMultiFloor%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;regionId&quot;:&quot;BD&quot;,&quot;language&quot;:&quot;en&quot;,&quot;platform&quot;:&quot;pc&quot;,&quot;isbackup&quot;:&quot;true&quot;,&quot;backupParams&quot;:&quot;language,regionID,platform,pageNo&quot;,&quot;moduleName&quot;:&quot;categoriesLpMultiFloor&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">54d9a8c86863839776d89246e64786c5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253316871</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.guided.shopping.categories.categoriesLpCommon</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.detail.getrecommend.msite/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253317678&amp;sign=18e8fed1b1202ed6742a42390f06a437&amp;api=mtop.lazada.detail.getRecommend.mSite&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=10000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;traffic=drz-replatform&amp;appkey=24677475&amp;data=%7B%22shop_id%22%3A%22255617%22%2C%22search%22%3A%22flashsale%22%2C%22category_id%22%3A%229871%22%2C%22item_id%22%3A%22279137603%22%2C%22user_id%22%3A%22700000238955%22%2C%22regional_key%22%3A%22110104030000%22%2C%22is_ab%22%3A%22false%22%2C%22sku%22%3A%22279137603_BD-1819640531%22%2C%22seller_id%22%3A%22700517010410%22%2C%22is_tbc%22%3A%220%22%2C%22_%22%3A%221727253314443%22%2C%22brand_id%22%3A%2239704%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.detail.getrecommend.msite/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;shop_id&quot;:&quot;255617&quot;,&quot;search&quot;:&quot;flashsale&quot;,&quot;category_id&quot;:&quot;9871&quot;,&quot;item_id&quot;:&quot;279137603&quot;,&quot;user_id&quot;:&quot;700000238955&quot;,&quot;regional_key&quot;:&quot;110104030000&quot;,&quot;is_ab&quot;:&quot;false&quot;,&quot;sku&quot;:&quot;279137603_BD-1819640531&quot;,&quot;seller_id&quot;:&quot;700517010410&quot;,&quot;is_tbc&quot;:&quot;0&quot;,&quot;_&quot;:&quot;1727253314443&quot;,&quot;brand_id&quot;:&quot;39704&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">18e8fed1b1202ed6742a42390f06a437</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253317678</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.detail.getRecommend.mSite</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-uid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.detail.getrecommend.msite/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253317678&amp;sign=18e8fed1b1202ed6742a42390f06a437&amp;api=mtop.lazada.detail.getRecommend.mSite&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=10000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;traffic=drz-replatform&amp;appkey=24677475&amp;data=%7B%22shop_id%22%3A%22255617%22%2C%22search%22%3A%22flashsale%22%2C%22category_id%22%3A%229871%22%2C%22item_id%22%3A%22279137603%22%2C%22user_id%22%3A%22700000238955%22%2C%22regional_key%22%3A%22110104030000%22%2C%22is_ab%22%3A%22false%22%2C%22sku%22%3A%22279137603_BD-1819640531%22%2C%22seller_id%22%3A%22700517010410%22%2C%22is_tbc%22%3A%220%22%2C%22_%22%3A%221727253314443%22%2C%22brand_id%22%3A%2239704%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.detail.getrecommend.msite/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;shop_id&quot;:&quot;255617&quot;,&quot;search&quot;:&quot;flashsale&quot;,&quot;category_id&quot;:&quot;9871&quot;,&quot;item_id&quot;:&quot;279137603&quot;,&quot;user_id&quot;:&quot;700000238955&quot;,&quot;regional_key&quot;:&quot;110104030000&quot;,&quot;is_ab&quot;:&quot;false&quot;,&quot;sku&quot;:&quot;279137603_BD-1819640531&quot;,&quot;seller_id&quot;:&quot;700517010410&quot;,&quot;is_tbc&quot;:&quot;0&quot;,&quot;_&quot;:&quot;1727253314443&quot;,&quot;brand_id&quot;:&quot;39704&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">18e8fed1b1202ed6742a42390f06a437</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253317678</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.detail.getRecommend.mSite</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.member.user.biz.getuser/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253319525&amp;sign=168895724dcc698b307f3cee1386ce08&amp;api=mtop.lazada.member.user.biz.getUser&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=10000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;traffic=drz-replatform&amp;appkey=24677475&amp;data=%7B%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.member.user.biz.getuser/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">168895724dcc698b307f3cee1386ce08</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253319525</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.member.user.biz.getUser</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-uid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.member.user.biz.getuser/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1727253319525&amp;sign=168895724dcc698b307f3cee1386ce08&amp;api=mtop.lazada.member.user.biz.getUser&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=10000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;traffic=drz-replatform&amp;appkey=24677475&amp;data=%7B%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.member.user.biz.getuser/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">168895724dcc698b307f3cee1386ce08</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253319525</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.member.user.biz.getUser</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/add" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/add</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,traffic,x-csrf-token,x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://stats.g.doubleclick.net/j/collect?t=dc&amp;aip=1&amp;_r=3&amp;v=1&amp;_v=j101&amp;tid=UA-53331019-1&amp;cid=1488798933.1727252646&amp;jid=2095875181&amp;gjid=899733314&amp;_gid=1873385393.1727252646&amp;_u=SCCAgAALAAAAAGAM~&amp;z=944736226" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_11}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">dc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">2095875181</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">SCCAgAALAAAAAGAM~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aip</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">944736226</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-53331019-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">899733314</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1873385393.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CK61yQEIlrbJAQiktskBCKmdygEIy4zLAQiWocsBCICZzQEIhaDNAQ==</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/add" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/add</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;itemId&quot;:&quot;279137603&quot;,&quot;skuId&quot;:&quot;1819640531&quot;,&quot;quantity&quot;:1}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-TOKEN" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                  <stringProp name="Header.value">1e39ee13e335</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://analytics.google.com/g/collect?v=2&amp;tid=G-PC3XY01BZ9&amp;gtm=45je49n0v887607317za200zb79511387&amp;_p=1727253313210&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;dma=0&amp;tag_exp=0&amp;cid=1488798933.1727252646&amp;ecid=1036732998&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B129.0.6668.59%7CNot%253DA%253FBrand%3B8.0.0.0%7CChromium%3B129.0.6668.59&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=15.0.0&amp;uaw=0&amp;are=1&amp;pae=1&amp;frm=0&amp;pscdl=noapi&amp;_eu=AEA&amp;_s=2&amp;sid=1727252646&amp;sct=1&amp;seg=1&amp;dl=https%3A%2F%2Fwww.daraz.com.bd%2Fproducts%2F-i279137603-s1819640531.html%3Fscm%3D1007.51657.380827.0%26pvid%3Dd68bb710-16ca-439f-88aa-cde6420e0fac%26search%3Dflashsale%26spm%3Da2a0e.tm80335411.FlashSale.d_279137603&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;dt=Hand%20Grip%20%2C%20Heavy%20gripper%20%2C%20Gym%20Grip%20%7C%20Daraz.com.bd&amp;en=view_search_results&amp;ep.search_term=flashsale&amp;_et=75&amp;tfd=10421" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/products/-i279137603-s1819640531.html?scm=1007.51657.380827.0&amp;pvid=d68bb710-16ca-439f-88aa-cde6420e0fac&amp;search=flashsale&amp;spm=a2a0e.tm80335411.FlashSale.d_279137603</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-PC3XY01BZ9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;129.0.6668.59|Not%3DA%3FBrand;8.0.0.0|Chromium;129.0.6668.59</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_eu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_eu</stringProp>
                  <stringProp name="Argument.value">AEA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_et</stringProp>
                  <stringProp name="Argument.value">75</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Hand Grip , Heavy gripper , Gym Grip | Daraz.com.bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="are" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">are</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ecid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ecid</stringProp>
                  <stringProp name="Argument.value">1036732998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="npa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">npa</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="frm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">frm</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je49n0v887607317za200zb79511387</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">15.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pscdl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pscdl</stringProp>
                  <stringProp name="Argument.value">noapi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">view_search_results</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">1727253313210</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfd</stringProp>
                  <stringProp name="Argument.value">10421</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.search_term" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.search_term</stringProp>
                  <stringProp name="Argument.value">flashsale</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CK61yQEIlrbJAQiktskBCKmdygEIy4zLAQiWocsBCICZzQEIhaDNAQ==</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253337918&amp;sign=d217dcb4838a70fb795534c11c458fd7&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">d217dcb4838a70fb795534c11c458fd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253337918</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253337918&amp;sign=d217dcb4838a70fb795534c11c458fd7&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">d217dcb4838a70fb795534c11c458fd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253337918</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253338281&amp;sign=c64024adcf79c6daa1de2cb929064ae4&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_416%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_416&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">c64024adcf79c6daa1de2cb929064ae4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253338281</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253338282&amp;sign=9a327282b9d431ac8891febaaa5c32f1&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">9a327282b9d431ac8891febaaa5c32f1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253338282</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253338281&amp;sign=c64024adcf79c6daa1de2cb929064ae4&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_416%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_416&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">c64024adcf79c6daa1de2cb929064ae4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253338281</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253338282&amp;sign=9a327282b9d431ac8891febaaa5c32f1&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">9a327282b9d431ac8891febaaa5c32f1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253338282</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fpObA/yvfQ6f59AaWPWQTF8G9UN0Pj3nW/NUJ/yGAT00az5SAT+UAy00YjRQ2bUuXfYml41s7+F/4YjlLL8n5IKdjzVtrIwLffxu1sfgeN9jOijBFg7eAk/ffzRym9NzP2YmQ/upPffXYVs6eUQffSou2DyLe/XfXCqltUmPfaP23Pjlwwb3PIS6WSYn58PYdIGxWP4pzMfFdPsY5bQ8fjuYCj5sq8El+pbrTMPSYtCa/20h2qO4JtSv9NvHaJ1MDz9AHERc5fxNHYtPWafOmcZMBXFvTnhqZZ5lCYs3ndoTYM7rLo0buztVYvgESke1wf+byrkC0POwvPsxMqi5TLFgs1ZrpS11zIAmE8ZOlEO+xX2LDVLoTuP4zC76sEEzTBJOfOQL0zYeIJS30wSvXM38bCeeP8Bt7FFgsNdPIa0xz3zO8Tfc2PVsKrWjOwh/sPgY/fAGjuGbhWQjj6W4OGGUoeWiNthG1aqrOflaSey8FtfYz3EIpcGbw/tRoDl61bDcg8uxWINleNHlvNqWTFN+W/ydai04qy6SgiOLm+qh/l08bEIcqbgIgSp/B3DfPU12X4ETgYB21Zw7JSynqUcmsonKoVnCJ5tU4V24AfIet4BM9M9J1yR2IYQQsnd7xwj+d+QKQcWaKyXiCM+BVzqkjv3Yo1aJt43hcwLzMwDJbyRFozOiNCNbLbAt5jNRcIWHiWw6Tz5HJjje6HjQqc+rb0+N7P4Y/q2/9ZAsyDMeTIVUaJcbiEpMxkKUskot0hOacOzRJmLuLsIZTfHev7b4gf==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253338552&amp;sign=df6c1b465890d1abe9e45fcbad47b13e&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">df6c1b465890d1abe9e45fcbad47b13e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253338552</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253338552&amp;sign=df6c1b465890d1abe9e45fcbad47b13e&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">df6c1b465890d1abe9e45fcbad47b13e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253338552</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">45630.0</stringProp>
              <stringProp name="ConstantTimer.delay">22815</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 45630 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://analytics.google.com/g/collect?v=2&amp;tid=G-PC3XY01BZ9&amp;gtm=45je49n0v887607317za200zb79511387&amp;_p=1727253313210&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;dma=0&amp;tag_exp=0&amp;cid=1488798933.1727252646&amp;ecid=1036732998&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B129.0.6668.59%7CNot%253DA%253FBrand%3B8.0.0.0%7CChromium%3B129.0.6668.59&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=15.0.0&amp;uaw=0&amp;are=1&amp;pae=1&amp;frm=0&amp;pscdl=noapi&amp;_s=3&amp;sid=1727252646&amp;sct=1&amp;seg=1&amp;dl=https%3A%2F%2Fwww.daraz.com.bd%2Fproducts%2F-i279137603-s1819640531.html%3Fscm%3D1007.51657.380827.0%26pvid%3Dd68bb710-16ca-439f-88aa-cde6420e0fac%26search%3Dflashsale%26spm%3Da2a0e.tm80335411.FlashSale.d_279137603&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;dt=Hand%20Grip%20%2C%20Heavy%20gripper%20%2C%20Gym%20Grip%20%7C%20Daraz.com.bd&amp;en=user_engagement&amp;_et=35068&amp;tfd=46009" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/products/-i279137603-s1819640531.html?scm=1007.51657.380827.0&amp;pvid=d68bb710-16ca-439f-88aa-cde6420e0fac&amp;search=flashsale&amp;spm=a2a0e.tm80335411.FlashSale.d_279137603</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-PC3XY01BZ9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;129.0.6668.59|Not%3DA%3FBrand;8.0.0.0|Chromium;129.0.6668.59</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_et</stringProp>
                  <stringProp name="Argument.value">35068</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Hand Grip , Heavy gripper , Gym Grip | Daraz.com.bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="are" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">are</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ecid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ecid</stringProp>
                  <stringProp name="Argument.value">1036732998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="npa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">npa</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="frm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">frm</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je49n0v887607317za200zb79511387</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">15.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pscdl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pscdl</stringProp>
                  <stringProp name="Argument.value">noapi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">user_engagement</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">1727253313210</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfd</stringProp>
                  <stringProp name="Argument.value">46009</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CK61yQEIlrbJAQiktskBCKmdygEIy4zLAQiWocsBCICZzQEIhaDNAQ==</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/j/collect?v=1&amp;_v=j101&amp;a=563269037&amp;t=event&amp;ni=0&amp;_s=1&amp;dl=https%3A%2F%2Fcart.daraz.com.bd%2Fcart%3Fspm%3Da2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;ul=en-us&amp;de=UTF-8&amp;dt=Daraz.com.bd%3A%20Online%20Shopping%20Bangladesh%20-%20Mobiles%2C%20Tablets%2C%20Home%20Appliances%2C%20TV%2C%20Audio%20%26amp%3B%20More&amp;sd=24-bit&amp;sr=1536x864&amp;vp=1519x695&amp;je=0&amp;ec=UAT&amp;ea=UAT&amp;el=UAT&amp;_u=QAEAAAABAAAAAC~&amp;jid=&amp;gjid=&amp;cid=1488798933.1727252646&amp;tid=UA-53331019-1&amp;_gid=1873385393.1727252646&amp;_slc=1&amp;gtm=45He49n0n81M2M4QT3v79511387za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=0&amp;z=1783810998" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_slc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_slc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-53331019-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Daraz.com.bd: Online Shopping Bangladesh - Mobiles, Tablets, Home Appliances, TV, Audio &amp;amp; More</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ea" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ea</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ec</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">563269037</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45He49n0n81M2M4QT3v79511387za200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="el" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">el</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1873385393.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">event</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">QAEAAAABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1519x695</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1783810998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ni" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ni</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getContextInfo" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getContextInfo</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253362862&amp;sign=b7c54982c3d3b6f409ab047d50556fac&amp;api=mtop.lazada.guided.shopping.categories.categoriesLpCommon&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22regionId%22%3A%22BD%22%2C%22language%22%3A%22en%22%2C%22platform%22%3A%22pc%22%2C%22isbackup%22%3A%22true%22%2C%22backupParams%22%3A%22language%2CregionID%2Cplatform%2CpageNo%22%2C%22moduleName%22%3A%22categoriesLpMultiFloor%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;regionId&quot;:&quot;BD&quot;,&quot;language&quot;:&quot;en&quot;,&quot;platform&quot;:&quot;pc&quot;,&quot;isbackup&quot;:&quot;true&quot;,&quot;backupParams&quot;:&quot;language,regionID,platform,pageNo&quot;,&quot;moduleName&quot;:&quot;categoriesLpMultiFloor&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">b7c54982c3d3b6f409ab047d50556fac</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253362862</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.guided.shopping.categories.categoriesLpCommon</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-ua,x-uid,x-umidtoken</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253362862&amp;sign=b7c54982c3d3b6f409ab047d50556fac&amp;api=mtop.lazada.guided.shopping.categories.categoriesLpCommon&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22regionId%22%3A%22BD%22%2C%22language%22%3A%22en%22%2C%22platform%22%3A%22pc%22%2C%22isbackup%22%3A%22true%22%2C%22backupParams%22%3A%22language%2CregionID%2Cplatform%2CpageNo%22%2C%22moduleName%22%3A%22categoriesLpMultiFloor%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;regionId&quot;:&quot;BD&quot;,&quot;language&quot;:&quot;en&quot;,&quot;platform&quot;:&quot;pc&quot;,&quot;isbackup&quot;:&quot;true&quot;,&quot;backupParams&quot;:&quot;language,regionID,platform,pageNo&quot;,&quot;moduleName&quot;:&quot;categoriesLpMultiFloor&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">b7c54982c3d3b6f409ab047d50556fac</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253362862</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.guided.shopping.categories.categoriesLpCommon</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">defaultToken1_um_not_loaded@@https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA@@1727253362329</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">defaultUAFromHeader with @@https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA@@1727253362329</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fu8JDsHcfQ6f5tbCWPJbTF8G9UNPhg7jrV/sJ/eLzCaSOd+UGQs09zJS5ut5laRyGfYJ9QUpNtrX8dBvslTVkuml42VtrIwLffxu1sfgeN9j0g24ThfjEYXKBy59eJYcfoeTXZeXYVt6eUQIXf3pFxbLe3gKfCx1t7TL6ufWESjQ5SR4oNLi5f/n58PwfPfqWS4QxL0ysPYx5scYgwpWNNHPacff5Twgb4DVhoQScG+r9ujeBB3XzAr+xRe5UgFsL70AM3EvoKn/pNwnMdC/eipFfDjv4fpKzdBDIhAfJKl6occYnzkxDd8oZ7nl42VqltqW+KbXJ4ZwEyRlOsI2kESCuwAlKRZOFGKRW0ZywsxE/RYc/jvjSo6/QohRP7v9vl3dqWGc5D0w07yiXxV+I1hoZqZ+LltL+7wajEwKaTw9X9p1ZIMeMSiVneokpMryCMc+2eKhOHb4s++GpHthP3wM0kRUM9dgmLynieXTAoexCIzpX0kRCvB9heHwvSBiDjmrf3Zn7tbsxvQ4Qy62f+Lj+iwqY7P3ciS6V9crmdt39sVdVo1HMnNEvTWihYAvfGI/4LAZBsRTUXi7u9DmLDV0mocVyvLtx8kqsR4MIVUKgNkeo3s1q7Gg+a3IpPyF0W0vwUxnisqTn0snfiWvLJdtSRkVwTYaIkACLW1iw9O7GlWY92pccHskiNdzNNyoU96u1JDhZUmrWreojCE+qtObITgWrQL4xRUf0Uax8cswm+k+zZJjzS==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lazada</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://analytics.google.com/g/collect?v=2&amp;tid=G-PC3XY01BZ9&amp;gtm=45je49n0v887607317z879511387za200zb79511387&amp;_p=1727253358794&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;dma=0&amp;tag_exp=0&amp;cid=1488798933.1727252646&amp;ecid=1036732998&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B129.0.6668.59%7CNot%253DA%253FBrand%3B8.0.0.0%7CChromium%3B129.0.6668.59&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=15.0.0&amp;uaw=0&amp;are=1&amp;pae=1&amp;frm=0&amp;pscdl=noapi&amp;_s=1&amp;sid=1727252646&amp;sct=1&amp;seg=1&amp;dl=https%3A%2F%2Fcart.daraz.com.bd%2Fcart%3Fspm%3Da2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;dt=Daraz.com.bd%3A%20Online%20Shopping%20Bangladesh%20-%20Mobiles%2C%20Tablets%2C%20Home%20Appliances%2C%20TV%2C%20Audio%20%26amp%3B%20More&amp;en=page_view&amp;tfd=8432" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-PC3XY01BZ9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;129.0.6668.59|Not%3DA%3FBrand;8.0.0.0|Chromium;129.0.6668.59</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Daraz.com.bd: Online Shopping Bangladesh - Mobiles, Tablets, Home Appliances, TV, Audio &amp;amp; More</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="are" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">are</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ecid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ecid</stringProp>
                  <stringProp name="Argument.value">1036732998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="npa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">npa</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="frm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">frm</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je49n0v887607317z879511387za200zb79511387</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">15.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pscdl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pscdl</stringProp>
                  <stringProp name="Argument.value">noapi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">page_view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">1727253358794</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfd</stringProp>
                  <stringProp name="Argument.value">8432</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CK61yQEIlrbJAQiktskBCKmdygEIy4zLAQiWocsBCICZzQEIhaDNAQ==</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/j/collect?v=1&amp;_v=j101&amp;a=563269037&amp;t=pageview&amp;_s=1&amp;dl=https%3A%2F%2Fcart.daraz.com.bd%2Fcart%3Fspm%3Da2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;ul=en-us&amp;de=UTF-8&amp;dt=Daraz.com.bd%3A%20Online%20Shopping%20Bangladesh%20-%20Mobiles%2C%20Tablets%2C%20Home%20Appliances%2C%20TV%2C%20Audio%20%26amp%3B%20More&amp;sd=24-bit&amp;sr=1536x864&amp;vp=1519x695&amp;je=0&amp;_u=SAEAAAABAAAAAC~&amp;jid=1100323559&amp;gjid=1258540388&amp;cid=1488798933.1727252646&amp;tid=UA-53331019-1&amp;_gid=1873385393.1727252646&amp;_r=1&amp;gtm=45He49n0n81M2M4QT3v79511387za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=0&amp;cg1=cart&amp;cg2=%5B%5D&amp;cg3=1&amp;cg4=cart&amp;cg5=en&amp;cd1=UAT&amp;cd2=1&amp;cd3=%5B%5D&amp;cd7=%5B%5D&amp;cd8=cart&amp;cd9=cart&amp;cd11=&amp;cd12=700000238955&amp;cd16=0&amp;z=598054418" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value">1100323559</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cg1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cg1</stringProp>
                  <stringProp name="Argument.value">cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value">1258540388</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-53331019-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cg3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cg3</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cg2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cg2</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Daraz.com.bd: Online Shopping Bangladesh - Mobiles, Tablets, Home Appliances, TV, Audio &amp;amp; More</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cg5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cg5</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cg4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cg4</stringProp>
                  <stringProp name="Argument.value">cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">563269037</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45He49n0n81M2M4QT3v79511387za200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd16" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd16</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd12" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd12</stringProp>
                  <stringProp name="Argument.value">700000238955</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">1873385393.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd11" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd11</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd2</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd1</stringProp>
                  <stringProp name="Argument.value">UAT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_r</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd3</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">SAEAAAABAAAAAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd8</stringProp>
                  <stringProp name="Argument.value">cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cd7</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd9</stringProp>
                  <stringProp name="Argument.value">cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1519x695</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">598054418</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385163&amp;sign=f710fe5c1f507dc7003d84e67948f8dc&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">f710fe5c1f507dc7003d84e67948f8dc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385163</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fuc+UqOjfQ6f5b5xWPJfTF8G9UNubepsUMvhJ/eKzCaSOd+UGQs09zJS5utX09lQGSYmAiAp5/ihcsxGPWCNSuml42VtrIwLffxu1sfgeN9j0g24ThfjEYXKBy59eJYcfoeTXZeXYVt6eUQIXf3pFxbLe3gKfCx1t7TL6ufWESjQ5SR4oNLi5f/n58PwfPfqWS4QxL0ysPYx5scYgwvWR4Hhacff5Twgb4DVhoQScG5jo4byyhukyXHiEFIFU2ubqQRNE6Ccu4jvvLOOyte/8Kni+acDCOU6r+LtwvysFFoJlKfVpy+Gus30fE7fTQacz53Ofo9kCkMQAscnym+riUf4imDEAdp3Z3QleYdek8zcsV8yN93fUdfLpV8ZqGTXvYMfdfK3f06CvUnhv0JrJYXC2lspZgNgXh5o8EcaIaySaRl8QehTJVFWeh7wydrGPWguRSuysa65/37ibg11Kn5TJ1JrPjaeYVf5IdAbLTIQ/v29dVaMMuN0XNhSfQ5aLoZ2kQexAIwWMLb/btu2gS0yEqUih7bVsMbc8sXQhrYZCbznAjyqyTKZVp/rVT2R17m95I8ziug9nQIOthNN2Y9ASMDi56HPTuQ4LnF/NokoOxSI8KR5Nd+BEkz/9+hZ0I7UxCU96L7Mzd4Sk44XSS/vtyzEFky/BRKfQ1X0F7YTesquO/CI119pmaCe1QG7KeUnhhOOceAR1P4i8lHEG/NbmoSuEbNbIqZeh22NV4hU5hio0gQBZn/=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385163&amp;sign=f710fe5c1f507dc7003d84e67948f8dc&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">f710fe5c1f507dc7003d84e67948f8dc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385163</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385575&amp;sign=504faed53265dc02511ad1cd6beed297&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_130%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_130&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">504faed53265dc02511ad1cd6beed297</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385575</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385575&amp;sign=c05a1fd5e9cae552cb1342af05d4932e&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">c05a1fd5e9cae552cb1342af05d4932e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385575</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385575&amp;sign=504faed53265dc02511ad1cd6beed297&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_130%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_130&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">504faed53265dc02511ad1cd6beed297</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385575</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385575&amp;sign=c05a1fd5e9cae552cb1342af05d4932e&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">c05a1fd5e9cae552cb1342af05d4932e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385575</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385921&amp;sign=668279bd6e731879aff9c11162b20440&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">668279bd6e731879aff9c11162b20440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385921</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253385921&amp;sign=668279bd6e731879aff9c11162b20440&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">668279bd6e731879aff9c11162b20440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253385921</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/async" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/async</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operator&quot;:&quot;item_i1949e68fe&quot;,&quot;data&quot;:{&quot;item_i1949e68fe&quot;:{&quot;tag&quot;:&quot;item&quot;,&quot;id&quot;:&quot;i1949e68fe&quot;,&quot;type&quot;:&quot;biz&quot;,&quot;fields&quot;:{&quot;parentItemQuantity&quot;:0,&quot;checkbox&quot;:{&quot;selected&quot;:true},&quot;itemId&quot;:&quot;279137603&quot;,&quot;quantity&quot;:{&quot;quantity&quot;:1,&quot;actualQuantity&quot;:&quot;&quot;,&quot;originQuantity&quot;:&quot;&quot;,&quot;giftSameSkuQuantity&quot;:&quot;&quot;},&quot;multiGiftOption&quot;:{&quot;chosenGiftSkuId&quot;:&quot;&quot;,&quot;groupInfo&quot;:&quot;&quot;},&quot;fromPage&quot;:&quot;&quot;,&quot;parentNowItemQuantity&quot;:0,&quot;sku&quot;:{&quot;skuId&quot;:&quot;1819640531&quot;},&quot;operation&quot;:&quot;checkbox&quot;,&quot;cartItemId&quot;:6788376830}}},&quot;linkage&quot;:{&quot;common&quot;:{&quot;compress&quot;:true,&quot;queryParams&quot;:&quot;^^$$2ef852213f8a73bff80f884d66181b87{$_$}H4sIAAAAAAAAAE1U227dNhD8Fz0bB7xf/JYeBIjR2nF87BRFUQhLcmkL0OWE4mnjGv73LGXHsZ5EaWd2dnakp65imYYZxu78qTuOUPNSpu68O8burDvCPdJ9hFJ193zWzTDh4Qjx58P1q6Kq04rlw7oO93PjiCOs6xUVtppl2sE4BAiwux+XAONug+3gOOwKfjvhWndfTlger6HAtBJZOD1iuUjduWXtEtJ5rc+6gnPC8tvw/2shNfp3OcUHLPsHmJvKDOOKZx2kVHBdG0PXKITiQnvB2zTLWvdLasLotByxQB0WEt19axLoGVGlES9hprnLG+VL7/0yV/xeW+c8lLXeDhNu0i+x3OPnkhqilhOST4F0vlp5+3jEQ6VX3fWeOrTx78ZalvkrlpW6v7wzu2YkzhC29icYbzAhTm8aZvzvQ0rLfA1vsz6/m6F1IZovdx9v/mpE32uBX061phcVp49rHSaoeF2GbYVPz6+KDjiOWA5LofG6v8k2zS3jTHF21g5KaGuMtP9QeS7L9CKiu7v6/erzn1fN2YK3hWKxuS64DCk4x62wQkuptScKwzmGBLJ7Jt2Ui+My41zXA6UG6qngppMshmHG0u8bT5ZBEE7F6I2BoJ2UTCUOoITgBpqYcQFaxHHtFQHQRlTomRQmCYPeJCYjyUhcZCuNJ8BALvQD98qjcbkNEaIPSmGWInqrjKQjZMspOU4H5+17EEgTuSMQp5m0YCGYGBMaa6XVlDMRuDdMyrbLEXPd/5rnj6aPqp0HFDYFhuis5zpr0OAxcONdQw1r/YRAWeo/ESIZGpiMZwpoDW1oKaxTmYPxiccNscQtAb1oMTIBTXAGOVqvFDMWPGNZBU3eQDZUP72Eu7+kclBOWwCIRCtoNzr7GFX2SjJv9Va+tFwfTtME5bE3zS/gMZGxzDKdSEpkUahokwFIwuf4E3O7VBj7ZhYD7ZJlAh13CklRtCoLloXF4N3WpSAlYqLPrOesbT6BJmZ02fFI7ggtrI/EIsgaJ9vYZbh/eO/vDcGcA3TMquhjispbTptQntNuUXK1rXJ9WI79Kmn5nAAyWMqWNdYRLwMJLmgbdUoABjGZN4CmJbdoG8zcW09NXMiZ0+iMNAknTQoqsCbs9a90MR9PtbftJwSYvNMQGLNcRKujyZ57yMmJHLigD+IHE/DYVIUFAAA=&quot;},&quot;signature&quot;:&quot;7a342755f6d62eea4a00f86f546a5194&quot;},&quot;hierarchy&quot;:{&quot;structure&quot;:{&quot;root_0&quot;:[&quot;container_C&quot;,&quot;floatTips_4&quot;,&quot;recommend_10&quot;],&quot;container_C&quot;:[&quot;leftContainer_CL&quot;,&quot;rightContainer_CR&quot;],&quot;leftContainer_CL&quot;:[&quot;listHeader_H&quot;,&quot;shop_s3e681&quot;,&quot;shop_s5de6d&quot;],&quot;shop_s3e681&quot;:[&quot;item_i1949e68fe&quot;],&quot;shop_s5de6d&quot;:[&quot;item_i194a36c18&quot;],&quot;rightContainer_CR&quot;:[&quot;location_2&quot;,&quot;orderSummary_6&quot;],&quot;orderSummary_6&quot;:[&quot;voucherInput_7&quot;,&quot;orderTotal_8&quot;]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-TOKEN" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                  <stringProp name="Header.value">1e39ee13e335</stringProp>
                </elementProp>
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gA-BFIoWwIDquRQ5P2e2Ho3oWNIQjiH9R_1T5GN1NY9kQqk9pdZ4ZyXwnVDnoA5hM=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#btOrbVD7zzZYQQo23bJu36SXLbC1/ewAaLpP5ALxK1S/TJCHoMflk1fxAGM8/uIrp72V1osKO6hqzzcoC315p7uzzBFMba7ulFzx2DD3VthqzF++2MmmlpTrzIrbL8/qlbrz0bLuUI1rPtrPHpcoaG9Y09NPKQIJxTjmpXzcQP0enuB6fzBLFo8eLO4fpaefsy6Fz3zz2yS4qqH8tt/WXub/h2SqR3U4COYLlfXzavzKF9WJQ5w/bXdjv571re/NmIgrFoUzOH6n7YN1O2CvOJjiHykxG4Dqwqxmh1QLruKW/ePKR15d242o+NibzYhr0u0fTnK0ZeXJfG53doBKKar0AcbKGndNUT6soL6SJxwUwb21qV2y8JymZbbppAjZb/Z+943ecj6bPys+8TGw4TZjcwoAwbfs8zBmYA6PYKupFFeUALTST7J5P0f1py8DKkdfNmgzhhTDNP7zkOTyIDUgMlBkqPI1C62gR8FxyQvHIMtC4AJLD5hBfaYo28hurglBETw4weyIdswJR27o5ziJFvHebuqtvD6fZ316F8vzLuTzMuVFMS9fO83EMdeJfhpJmPV71r/DnFy8GuHIslAE+8AMshBtqVU6uUB91zkA5/ERFUnCZ3CTbFX6mD817XWPR1s08ZHgE1HcNdnvfxnvBvPx3rkrQ94ss5kjPxizzwzJYcyR60JGwTuC6LuoMv5YQE+y9wGYOpgqvvvSNrrRVT27UKJ18mVZmjbqN/JQ+ersjT9uXLp/soIDyaQR+aU9QuMd1H/93SzawhWDu5xzRTjNaddFgkgjxjNcyu/xgoKXRMFEgTrAZO9n+1KhzbY/0poqYcEeBlR5U1LyeC1qYUmvNdeJsa++HtPa2eIwTGFsId+jNd+7xaj7EFeCU+chAc5mjHoHrv76jMBy5wauK2PE2motsm5UX1BduGpd97WcV5tYDIFeinHWERsQGlS/MfepXZGHU7Gk2OvN9l0DPtEi3D5apMlhqmJWp0UavYCIfmis/jyonBKe7s6QkfvUPPeAH9hLbdqybvwB2oeiWBSht8LAcE4ZZFUFtHWamh/iGsVaUFSpcFF52BZa5zLpzAiBZHiGdqFL4qy1jEVX7w2ZJTRkEFNENRekjhHxjZTbNvFAvmyN4/cUqeM96o32T1tgGwJarKCG67w3G0LtJYuYwsWsAEJ1si8+PC3U5946YyCTO+bKS/TAkVYkC7t0TyjTccEXgOHkzwCpN2vib2bxZ5jqTRpHFRnHJCYbtGoTndLKnhYp99DfM0/VlD9l5cLyffE8EdcsYht2cVslkYZO9IhowWeisu5r2K2QHLJ5OY9G28UQnWIBNStkvKWpweLoDyCGbb6FPCu2/qO7z3WJICRSX5aCWFoSyQty5smKlu4XBr7V9GB0CLmO6ve1OskcwK98r9S/Fi2DIMH2WUV06PQyu/XhekglhB+VOC2dd+q0Y7G7JevPg3fwTRhfJuO2sFyg44w82quo52Cw+/MONZTiyQje+ISnRMMJF0j+YaqjChld2KkT5sIO3o9miBtzYicqiyDtUGWy1t5N//476ioHAKh9pS/f6te5af+OJ/SA48zqrAEBlKwx8dZDzJc1UDzEbmKMU4pgBIj7wCddL13pwVubqZuBAF==</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="bx-v" elementType="Header">
                  <stringProp name="Header.name">bx-v</stringProp>
                  <stringProp name="Header.value">2.5.20</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/async" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/async</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operator&quot;:&quot;item_i1949e68fe&quot;,&quot;data&quot;:{&quot;item_i1949e68fe&quot;:{&quot;tag&quot;:&quot;item&quot;,&quot;id&quot;:&quot;i1949e68fe&quot;,&quot;type&quot;:&quot;biz&quot;,&quot;fields&quot;:{&quot;parentItemQuantity&quot;:0,&quot;checkbox&quot;:{&quot;selected&quot;:true},&quot;itemId&quot;:&quot;279137603&quot;,&quot;quantity&quot;:{&quot;quantity&quot;:1,&quot;actualQuantity&quot;:&quot;&quot;,&quot;originQuantity&quot;:&quot;&quot;,&quot;giftSameSkuQuantity&quot;:&quot;&quot;},&quot;multiGiftOption&quot;:{&quot;chosenGiftSkuId&quot;:&quot;&quot;,&quot;groupInfo&quot;:&quot;&quot;},&quot;fromPage&quot;:&quot;&quot;,&quot;parentNowItemQuantity&quot;:0,&quot;sku&quot;:{&quot;skuId&quot;:&quot;1819640531&quot;},&quot;operation&quot;:&quot;delete&quot;,&quot;cartItemId&quot;:6788376830}}},&quot;linkage&quot;:{&quot;common&quot;:{&quot;compress&quot;:true,&quot;queryParams&quot;:&quot;^^$$1b8739075c573cf3603bb623b1db372a{$_$}H4sIAAAAAAAAAE1TbW+bMBD+L/4cRdgG2/TbVlVqNTVLl3bTVE3RgY8WCTCzzbasyn/fXfqy8gmbu+ftjieRMY79BIM4exLzALkLcRRnYm7FSszwgPTeQsyVOK7EBCPuZmhfL9PXkqqWhPFDSv3DxBjtACltqJBrwriGoW+ggfXDEBoY1qe2Ncz9OuLPBVNe3ywYD1uIMCYCa5YDxisvzmzBj9KurqqViDh5jB/7vy+FRPQrLO0jxvNHmFhlB0PClQDvI6bECIIhVClVVSvJbkLK58GzMDqFGSPkEOnUZxzfbvpANsRPFkV3BO4HvIaJkohvJAkHbDP6K09K7o11TlvjdPHj3SfCvFlgyn0+sNr/ReJMHl8NnYcp45/MBV0fU77tRzzlcY3xAT9Hz6Q5LkgdDZl/mc/tYcZdZunbcxLJmd4NOYbpK8ZEBp6/mTVPBydoTg4WGL6gR7L6amPC3x+8D9MW3gI8vouBWQjm5u7iy3cG+pMj/I+fSdnkRcr9CBm3sT/txdPxRdEOhwHjLkSyJ+5pFpW0hSxKWaz4UKrKGqPtDyrvYhifRYi7zafN528bHlfE20i7dhqlkrrxjXPSKqsqrZ2ztaykdth40OJIumnZ5jDhlNOOVhHyEpF18nD3vazLGo3rmMKhV2CsdxJbY6WxrbRSF9Ior+u66oh76FO+RKD495fcYWptda2NrFVbaTCFdiVYVqG86wrqGJ9XZH/NwUtbkjaFlS28NGCbsmobWTisPNFyeeDR7pZxhHjYG95VA1TQqpK3VaMvVetLA53HzvjS6dee25Bh2DvuqJuyaSssJXqJtXGN7VoER+JM61RFHekxzPukybikBk9JGQu1o3+kpOiNKRvliY9wqkZxiv8AgkXPZw8EAAA=&quot;},&quot;signature&quot;:&quot;7a342755f6d62eea4a00f86f546a5194&quot;},&quot;hierarchy&quot;:{&quot;structure&quot;:{&quot;root_0&quot;:[&quot;container_C&quot;,&quot;floatTips_4&quot;,&quot;recommend_10&quot;],&quot;container_C&quot;:[&quot;leftContainer_CL&quot;,&quot;rightContainer_CR&quot;],&quot;leftContainer_CL&quot;:[&quot;listHeader_H&quot;,&quot;shop_s3e681&quot;,&quot;shop_s5de6d&quot;],&quot;shop_s3e681&quot;:[&quot;item_i1949e68fe&quot;],&quot;shop_s5de6d&quot;:[&quot;item_i194a36c18&quot;],&quot;rightContainer_CR&quot;:[&quot;location_2&quot;,&quot;orderSummary_6&quot;],&quot;orderSummary_6&quot;:[&quot;voucherInput_7&quot;,&quot;orderTotal_8&quot;]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-TOKEN" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                  <stringProp name="Header.value">1e39ee13e335</stringProp>
                </elementProp>
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gA-BFIoWwIDquRQ5P2e2Ho3oWNIQjiH9R_1T5GN1NY9kQqk9pdZ4ZyXwnVDnoA5hM=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#xizriD6DzzZqnzo22ZKFC6SraX2gDn3IPwFu3Ne6tKqjlUExB6FZ7OACDVNp9P0qqhDsjxbS6Ddfs5LDl62iDZJqlbzxbeEq+BjlzzcfoO0il3MzzPzbVXlqlbrDoD3D86GJabriL2kKllfzzPziVXXDAWg8xrvZrI7ZbioWvBzddxQvCaUoIr7OSyvRP8FVKNxZiHYSRF4jE+PuKqtHozMMvq8RY+WZt36MG+30vP00AD4L0TBXDX0lkZLbAhKB8I3tKknfAauZwwEKhVeTaZPVkU789kx6IHEw9rbN6D2EhKkFoGodT1VjRC6Cmxq3elKlIN6SL3yQDoeWRXq3Uo6bcCPR/N12rLSIgj6C7z6Q2gyBM5YyWVyr0B0F4yB+T7+uo1NQL7ExNeB6sd6kIRMoGWyyq1FZbGqjokvBxs8htydc+yGAf8NbzBvH+0U7DLcVa5A9NC15rTS1nsLEY/toQBZlWoBLoSIaKglJCQETA4sGC/srgE6iLv7dSLUb1a8FcKPnwMpOGdQLHMYOCcKf5OBrbXR7PQ8MgVYFajxwXA1ZzLrmyK2GVCSH9Xeh541pRCEeLsQfbxMTXbb4YFpQNq0EE9mgkeNUc3MJqob1oGHKX9TGNvKQXdUmKvRqIfuZm2zMHRDYoy3rxE8fv0iM/zFfKSm9Tqr0jktVNTuVB42m2DfE1jgY9LFOtNI8UMmA6eKgnOf0bfDpykwsn3ScbEy/6kQI5yJONGZ++O5gBb6yBaVvPVhAx/Z2VoRzHyNMQvLMDsEgt1MCvdWyuDi6WHh0YxkSpDdJ1Z9mUglcTCRXqeHThWoLq8Sje7SnxNJMmmw0q5xuK2hVFrkjbCzkSpmJcZEYu3GhHgXmSf89c8W+na7DQ5j3n9Ta+mWIxo9vCREUYY0AVtTwNTvRwfR2hcfTrOq0NCbY0zhR0UdVcsvOA/NfUyBeCOZlPiOMfjx2Oy+21ff87UXxXFrrygmkSc25OkFfGvx8Z1J4wzGJL9Y3HVtdwFSc2ABUm1i7UJ8/uusePt1Eoi+92Q9IHF79ZQ60fe/TDsGrVcyTcXpHFVZEJDlxpbv3qx3ibSRJXopsQ7vF3b32Dpbzw5nKN0V9cZgs4Mw49x42rG7Arher5e5gju+RX4RPOqDWeU4ta6PHYOC7q/0bcvKrNtN/zaAdRvNrJq11GItJuDf5nLjvgJPxkTasNvHXvhcvfi5Lrx9idaz49cyAithpnt34UopMD3MyyWuDOToQEhBwQFLLiGDRH6ifNL9lZOXml2unm/xa490fLmexFdPgoVdR5Th32yxpRtAdc8iuGLrsQ9Mvq/A2zvxLiSO44CGpIZdHKGj3yqkCiAivwlXSJ0A1ETdZXiDWBhexJNZ/2NDylj0sQgXjVGPydkqgczdynVUwCDl43z2T31KTN5XEinXmFzbxkDXQxrZ6Xiy7qrtpzr0/H35c9zfkhKc55asFdr7Ed+X6thElWwmrT1OcqlvoakiwyZRoHxKFmsR3ejgsP+3YY+Cw5Q2hJ0F/pW470l8EcSzvm+3M5dnqEQTviqEpjMPj51u33FlN09hqJSqJjKtANUzAGbarTqyj65ZiAp/X2CxYKl4GIYxiYOkgzSsOrYCYP+/rTpZqTGquXsTP3Vz=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="bx-v" elementType="Header">
                  <stringProp name="Header.name">bx-v</stringProp>
                  <stringProp name="Header.value">2.5.20</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://analytics.google.com/g/collect?v=2&amp;tid=G-PC3XY01BZ9&amp;gtm=45je49n0v887607317za200zb79511387&amp;_p=1727253358794&amp;_gaz=1&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;dma=0&amp;tag_exp=0&amp;cid=1488798933.1727252646&amp;ecid=1036732998&amp;ul=en-us&amp;sr=1536x864&amp;uaa=x86&amp;uab=64&amp;uafvl=Google%2520Chrome%3B129.0.6668.59%7CNot%253DA%253FBrand%3B8.0.0.0%7CChromium%3B129.0.6668.59&amp;uamb=0&amp;uam=&amp;uap=Windows&amp;uapv=15.0.0&amp;uaw=0&amp;are=1&amp;pae=1&amp;frm=0&amp;pscdl=noapi&amp;_eu=AEA&amp;_s=2&amp;sid=1727252646&amp;sct=1&amp;seg=1&amp;dl=https%3A%2F%2Fcart.daraz.com.bd%2Fcart%3Fspm%3Da2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA&amp;dr=https%3A%2F%2Fwww.daraz.com.bd%2F&amp;dt=Daraz.com.bd%3A%20Online%20Shopping%20Bangladesh%20-%20Mobiles%2C%20Tablets%2C%20Home%20Appliances%2C%20TV%2C%20Audio%20%26amp%3B%20More&amp;en=click&amp;ep.link_id=&amp;ep.link_classes=&amp;ep.link_url=https%3A%2F%2Fwww.daraz.com.bd%2F%3Fspm%3Da2o42.cart.header.dhome.55522829U3Cibf&amp;ep.link_domain=daraz.com.bd&amp;ep.outbound=true&amp;_et=42206&amp;tfd=45649" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">g/collect</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://cart.daraz.com.bd/cart?spm=a2a0e.pdp_revamp.header.dcart.56ab5d70iJqtOA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gcd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gcd</stringProp>
                  <stringProp name="Argument.value">13l3l3l3l1l1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag_exp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tag_exp</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_gaz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gaz</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">G-PC3XY01BZ9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uafvl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uafvl</stringProp>
                  <stringProp name="Argument.value">Google%20Chrome;129.0.6668.59|Not%3DA%3FBrand;8.0.0.0|Chromium;129.0.6668.59</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_eu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_eu</stringProp>
                  <stringProp name="Argument.value">AEA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dr</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_et</stringProp>
                  <stringProp name="Argument.value">42206</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">Daraz.com.bd: Online Shopping Bangladesh - Mobiles, Tablets, Home Appliances, TV, Audio &amp;amp; More</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.link_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.link_id</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaa</stringProp>
                  <stringProp name="Argument.value">x86</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seg</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="are" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">are</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ecid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ecid</stringProp>
                  <stringProp name="Argument.value">1036732998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.link_url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ep.link_url</stringProp>
                  <stringProp name="Argument.value">https://www.daraz.com.bd/?spm=a2o42.cart.header.dhome.55522829U3Cibf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uab</stringProp>
                  <stringProp name="Argument.value">64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uamb</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.outbound" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.outbound</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="npa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">npa</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uam" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uam</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="frm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">frm</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gtm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gtm</stringProp>
                  <stringProp name="Argument.value">45je49n0v887607317za200zb79511387</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uapv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uapv</stringProp>
                  <stringProp name="Argument.value">15.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uap</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sct</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.link_domain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.link_domain</stringProp>
                  <stringProp name="Argument.value">daraz.com.bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pscdl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pscdl</stringProp>
                  <stringProp name="Argument.value">noapi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">click</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uaw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uaw</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_p</stringProp>
                  <stringProp name="Argument.value">1727253358794</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tfd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tfd</stringProp>
                  <stringProp name="Argument.value">45649</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ep.link_classes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ep.link_classes</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">1488798933.1727252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CK61yQEIlrbJAQiktskBCKmdygEIy4zLAQiWocsBCICZzQEIhaDNAQ==</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.com.bd/?spm=a2o42.cart.header.dhome.55522829U3Cibf" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2o42.cart.header.dhome.55522829U3Cibf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">45725.0</stringProp>
              <stringProp name="ConstantTimer.delay">22862.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 45725 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1727253405931&amp;sign=bda01ba025725459d62f4bf84c9a5f24&amp;api=mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService&amp;v=1.0&amp;jsonpIncPrefix=kangaroo&amp;timeout=8000&amp;isSec=1&amp;type=originaljson&amp;dataType=jsonp" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253405931</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">bda01ba025725459d62f4bf84c9a5f24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonpIncPrefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonpIncPrefix</stringProp>
                  <stringProp name="Argument.value">kangaroo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1727253405931&amp;sign=bda01ba025725459d62f4bf84c9a5f24&amp;api=mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService&amp;v=1.0&amp;jsonpIncPrefix=kangaroo&amp;timeout=8000&amp;isSec=1&amp;type=originaljson&amp;dataType=jsonp" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253405931</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">jsonp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">bda01ba025725459d62f4bf84c9a5f24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonpIncPrefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonpIncPrefix</stringProp>
                  <stringProp name="Argument.value">kangaroo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">8000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;backupParams&quot;:&quot;currency,regionId,language,device&quot;,&quot;url&quot;:&quot;https://pages.daraz.com.bd/wow/gcp/route/daraz/bd/upr/router?hybrid=1&amp;data_prefetch=true&amp;prefetch_replace=1&amp;at_iframe=1&amp;wh_pid=/lazada/channel/bd/homepage/home&quot;,&quot;device&quot;:&quot;pc&quot;,&quot;regionId&quot;:&quot;bd&quot;,&quot;language&quot;:&quot;en&quot;,&quot;currency&quot;:&quot;bdt&quot;,&quot;sequence&quot;:1,&quot;extParam&quot;:&quot;{\&quot;screenHeight\&quot;:695,\&quot;screenWidth\&quot;:1536,\&quot;platform\&quot;:\&quot;pc\&quot;}&quot;,&quot;pvuuid&quot;:&quot;&quot;,&quot;cookie&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.com.bd/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.com.bd/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-requested-with</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.com.bd/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253407395&amp;sign=5376efdec4e21dc6ad6fa9bde295171d&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22BD%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%22vjhkH24crl4CAXazEh71JJEn%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;appId&quot;:&quot;41701&quot;,&quot;params&quot;:&quot;{\&quot;appId\&quot;:\&quot;41701\&quot;,\&quot;isbackup\&quot;:true,\&quot;newTileEnable\&quot;:true,\&quot;language\&quot;:\&quot;en\&quot;,\&quot;region_id\&quot;:\&quot;BD\&quot;,\&quot;platform\&quot;:\&quot;pc\&quot;,\&quot;scene\&quot;:\&quot;homepage\&quot;,\&quot;appVersion\&quot;:\&quot;7.48.0\&quot;,\&quot;anonymous_id\&quot;:\&quot;vjhkH24crl4CAXazEh71JJEn\&quot;,\&quot;pageSize\&quot;:50,\&quot;userId\&quot;:0,\&quot;pageNo\&quot;:0}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">5376efdec4e21dc6ad6fa9bde295171d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253407395</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.relationrecommend.LazadaRecommend.recommend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">entrance,traffic,x-i18n-language,x-i18n-regionid,x-uid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253407395&amp;sign=5376efdec4e21dc6ad6fa9bde295171d&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22BD%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%22vjhkH24crl4CAXazEh71JJEn%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;appId&quot;:&quot;41701&quot;,&quot;params&quot;:&quot;{\&quot;appId\&quot;:\&quot;41701\&quot;,\&quot;isbackup\&quot;:true,\&quot;newTileEnable\&quot;:true,\&quot;language\&quot;:\&quot;en\&quot;,\&quot;region_id\&quot;:\&quot;BD\&quot;,\&quot;platform\&quot;:\&quot;pc\&quot;,\&quot;scene\&quot;:\&quot;homepage\&quot;,\&quot;appVersion\&quot;:\&quot;7.48.0\&quot;,\&quot;anonymous_id\&quot;:\&quot;vjhkH24crl4CAXazEh71JJEn\&quot;,\&quot;pageSize\&quot;:50,\&quot;userId\&quot;:0,\&quot;pageNo\&quot;:0}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">5376efdec4e21dc6ad6fa9bde295171d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253407395</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.relationrecommend.LazadaRecommend.recommend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">BD</stringProp>
                </elementProp>
                <elementProp name="x-uid" elementType="Header">
                  <stringProp name="Header.name">x-uid</stringProp>
                  <stringProp name="Header.value">700000238955</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://ase.aliexpress.com/upload/web/info" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">upload/web/info</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534277682%26tm%3D1727253427%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_12}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534277682%26tm%3D1727253427%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;uid&quot;:&quot;vjhkH24crl4CAXazEh71JJEn&quot;,&quot;utdid&quot;:null,&quot;wid&quot;:&quot;5b8e5625-5ba2-429f-91bc-1ecc795bb707&quot;,&quot;type&quot;:&quot;jssdkidx&quot;,&quot;category&quot;:100001,&quot;w_cnt&quot;:1,&quot;w_rel&quot;:&quot;2.0.35&quot;,&quot;w_bid&quot;:&quot;zj3qxh87-qodddpp2&quot;,&quot;w_spa&quot;:false,&quot;w_frmid&quot;:&quot;6a39405d-7cff-4f7f-0ee2-19ee346dc18b&quot;,&quot;w_tm&quot;:1727253427012,&quot;log_src&quot;:&quot;jssdk&quot;,&quot;sdk_ver&quot;:&quot;2.3.23&quot;,&quot;w_url&quot;:&quot;https://www.daraz.com.bd/&quot;,&quot;w_query&quot;:&quot;?spm=a2o42.cart.header.dhome.55522829U3Cibf&quot;,&quot;w_ref&quot;:&quot;?&quot;,&quot;w_title&quot;:&quot;Homepage&quot;,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36&quot;,&quot;referrer&quot;:&quot;https://cart.daraz.com.bd/&quot;,&quot;dsp_dpi&quot;:1.25,&quot;dsp_w&quot;:1536,&quot;dsp_h&quot;:864,&quot;net&quot;:&quot;&quot;,&quot;sampleRate&quot;:1,&quot;w_ctrid&quot;:&quot;lzdgcpmp&quot;,&quot;c10&quot;:0,&quot;w_bl1&quot;:&quot;[{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/res-d/alilog/mlog/aplus/202980191.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:319.29999999701977,\&quot;duration\&quot;:410.6000000089407,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:319.29999999701977,\&quot;domainLookupStart\&quot;:319.29999999701977,\&quot;domainLookupEnd\&quot;:319.29999999701977,\&quot;connectStart\&quot;:319.29999999701977,\&quot;secureConnectionStart\&quot;:319.29999999701977,\&quot;connectEnd\&quot;:319.29999999701977,\&quot;requestStart\&quot;:370.1000000089407,\&quot;responseStart\&quot;:596.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:729.9000000059605,\&quot;transferSize\&quot;:64934,\&quot;encodedBodySize\&quot;:64634,\&quot;decodedBodySize\&quot;:164990,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/woodpeckerx/itrace-next/??itrace-jserror.iife.js,itrace-interface.iife.js,itrace-perf.iife.js,itrace-flow.iife.js,itrace-blank.iife.js,itrace-resource.iife.js,itrace.iife.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:319.6000000089407,\&quot;duration\&quot;:404.19999998807907,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:319.6000000089407,\&quot;domainLookupStart\&quot;:319.6000000089407,\&quot;domainLookupEnd\&quot;:319.6000000089407,\&quot;connectStart\&quot;:319.6000000089407,\&quot;secureConnectionStart\&quot;:319.6000000089407,\&quot;connectEnd\&quot;:319.6000000089407,\&quot;requestStart\&quot;:376.40000000596046,\&quot;responseStart\&quot;:661.2000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:723.7999999970198,\&quot;transferSize\&quot;:34502,\&quot;encodedBodySize\&quot;:34202,\&quot;decodedBodySize\&quot;:69651,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/res-o/lzdfe/lzd-h5-itrace/index-module.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:319.70000000298023,\&quot;duration\&quot;:1782.5999999940395,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:319.70000000298023,\&quot;domainLookupStart\&quot;:319.70000000298023,\&quot;domainLookupEnd\&quot;:319.70000000298023,\&quot;connectStart\&quot;:319.70000000298023,\&quot;secureConnectionStart\&quot;:319.70000000298023,\&quot;connectEnd\&quot;:319.70000000298023,\&quot;requestStart\&quot;:377.20000000298023,\&quot;responseStart\&quot;:2096.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2102.2999999970198,\&quot;transferSize\&quot;:18511,\&quot;encodedBodySize\&quot;:18211,\&quot;decodedBodySize\&quot;:49656,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/res-o/lzd_sec/LWSC/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320,\&quot;duration\&quot;:411,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320,\&quot;domainLookupStart\&quot;:320,\&quot;domainLookupEnd\&quot;:320,\&quot;connectStart\&quot;:320,\&quot;secureConnectionStart\&quot;:320,\&quot;connectEnd\&quot;:320,\&quot;requestStart\&quot;:377.29999999701977,\&quot;responseStart\&quot;:728.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:731,\&quot;transferSize\&quot;:3230,\&quot;encodedBodySize\&quot;:2930,\&quot;decodedBodySize\&quot;:5879,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd/assets/1.2.13/font/EuclidCircularA-Regular.woff2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320.1000000089407,\&quot;duration\&quot;:527,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320.1000000089407,\&quot;domainLookupStart\&quot;:320.1000000089407,\&quot;domainLookupEnd\&quot;:320.1000000089407,\&quot;connectStart\&quot;:320.1000000089407,\&quot;secureConnectionStart\&quot;:320.1000000089407,\&quot;connectEnd\&quot;:320.1000000089407,\&quot;requestStart\&quot;:383.70000000298023,\&quot;responseStart\&quot;:801.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:847.1000000089407,\&quot;transferSize\&quot;:35528,\&quot;encodedBodySize\&quot;:35228,\&quot;decodedBodySize\&quot;:35228,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd/assets/1.2.13/font/EuclidCircularA-Medium.woff2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320.29999999701977,\&quot;duration\&quot;:779.6000000089407,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320.29999999701977,\&quot;domainLookupStart\&quot;:320.29999999701977,\&quot;domainLookupEnd\&quot;:320.29999999701977,\&quot;connectStart\&quot;:320.29999999701977,\&quot;secureConnectionStart\&quot;:320.29999999701977,\&quot;connectEnd\&quot;:320.29999999701977,\&quot;requestStart\&quot;:383.70000000298023,\&quot;responseStart\&quot;:1004.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1099.9000000059605,\&quot;transferSize\&quot;:35664,\&quot;encodedBodySize\&quot;:35364,\&quot;decodedBodySize\&quot;:35364,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd/assets/1.2.13/font/EuclidCircularA-Bold.woff2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320.5,\&quot;duration\&quot;:1402.2999999970198,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320.5,\&quot;domainLookupStart\&quot;:320.5,\&quot;domainLookupEnd\&quot;:320.5,\&quot;connectStart\&quot;:320.5,\&quot;secureConnectionStart\&quot;:320.5,\&quot;connectEnd\&quot;:320.5,\&quot;requestStart\&quot;:384.5,\&quot;responseStart\&quot;:1127.2999999970198,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1722.7999999970198,\&quot;transferSize\&quot;:34484,\&quot;encodedBodySize\&quot;:34184,\&quot;decodedBodySize\&quot;:34184,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/css/main.css\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320.6000000089407,\&quot;duration\&quot;:414.79999999701977,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320.6000000089407,\&quot;domainLookupStart\&quot;:320.6000000089407,\&quot;domainLookupEnd\&quot;:320.6000000089407,\&quot;connectStart\&quot;:320.6000000089407,\&quot;secureConnectionStart\&quot;:320.6000000089407,\&quot;connectEnd\&quot;:320.6000000089407,\&quot;requestStart\&quot;:385.1000000089407,\&quot;responseStart\&quot;:733.6000000089407,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:735.4000000059605,\&quot;transferSize\&quot;:350,\&quot;encodedBodySize\&quot;:50,\&quot;decodedBodySize\&quot;:60,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/css/p_index-index.css\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320.70000000298023,\&quot;duration\&quot;:476.40000000596046,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320.70000000298023,\&quot;domainLookupStart\&quot;:320.70000000298023,\&quot;domainLookupEnd\&quot;:320.70000000298023,\&quot;connectStart\&quot;:320.70000000298023,\&quot;secureConnectionStart\&quot;:320.70000000298023,\&quot;connectEnd\&quot;:320.70000000298023,\&quot;requestStart\&quot;:385.40000000596046,\&quot;responseStart\&quot;:794.1000000089407,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:797.1000000089407,\&quot;transferSize\&quot;:14130,\&quot;encodedBodySize\&quot;:13830,\&quot;decodedBodySize\&quot;:58448,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.alicdn.com/mtb/lib-mtop/2.7.3/mtop.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:320.90000000596046,\&quot;duration\&quot;:344.20000000298023,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:320.90000000596046,\&quot;domainLookupStart\&quot;:320.90000000596046,\&quot;domainLookupEnd\&quot;:320.90000000596046,\&quot;connectStart\&quot;:320.90000000596046,\&quot;secureConnectionStart\&quot;:320.90000000596046,\&quot;connectEnd\&quot;:320.90000000596046,\&quot;requestStart\&quot;:386.29999999701977,\&quot;responseStart\&quot;:629,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:665.1000000089407,\&quot;transferSize\&quot;:10309,\&quot;encodedBodySize\&quot;:10009,\&quot;decodedBodySize\&quot;:28393,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd/assets/1.2.13/??react/16.8.0/react.production.min.js,react-dom/16.8.0/react-dom.production.min.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:321.20000000298023,\&quot;duration\&quot;:580.5999999940395,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:321.20000000298023,\&quot;domainLookupStart\&quot;:321.20000000298023,\&quot;domainLookupEnd\&quot;:321.20000000298023,\&quot;connectStart\&quot;:321.20000000298023,\&quot;secureConnectionStart\&quot;:321.20000000298023,\&quot;connectEnd\&quot;:321.20000000298023,\&quot;requestStart\&quot;:386.79999999701977,\&quot;responseStart\&quot;:806.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:901.7999999970198,\&quot;transferSize\&quot;:51839,\&quot;encodedBodySize\&quot;:51539,\&quot;decodedBodySize\&quot;:118955,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd/??polyfill/0.0.1/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:321.40000000596046,\&quot;duration\&quot;:691.0999999940395,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:321.40000000596046,\&quot;domainLookupStart\&quot;:321.40000000596046,\&quot;domainLookupEnd\&quot;:321.40000000596046,\&quot;connectStart\&quot;:321.40000000596046,\&quot;secureConnectionStart\&quot;:321.40000000596046,\&quot;connectEnd\&quot;:321.40000000596046,\&quot;requestStart\&quot;:387.6000000089407,\&quot;responseStart\&quot;:1004.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1012.5,\&quot;transferSize\&quot;:19933,\&quot;encodedBodySize\&quot;:19633,\&quot;decodedBodySize\&quot;:56771,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd/assets/0.0.5/next/0.19.21/next.min.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:321.5,\&quot;duration\&quot;:1768.5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:321.5,\&quot;domainLookupStart\&quot;:321.5,\&quot;domainLookupEnd\&quot;:321.5,\&quot;connectStart\&quot;:321.5,\&quot;secureConnectionStart\&quot;:321.5,\&quot;connectEnd\&quot;:321.5,\&quot;requestStart\&quot;:387.6000000089407,\&quot;responseStart\&quot;:1144.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2090,\&quot;transferSize\&quot;:335873,\&quot;encodedBodySize\&quot;:335573,\&quot;decodedBodySize\&quot;:931662,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lazada-search-fe/lzd-searchbox/0.4.13/index.css\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:321.70000000298023,\&quot;duration\&quot;:704.0999999940395,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:321.70000000298023,\&quot;domainLookupStart\&quot;:321.70000000298023,\&quot;domainLookupEnd\&quot;:321.70000000298023,\&quot;connectStart\&quot;:321.70000000298023,\&quot;secureConnectionStart\&quot;:321.70000000298023,\&quot;connectEnd\&quot;:321.70000000298023,\&quot;requestStart\&quot;:387.70000000298023,\&quot;responseStart\&quot;:1023.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1025.7999999970198,\&quot;transferSize\&quot;:3779,\&quot;encodedBodySize\&quot;:3479,\&quot;decodedBodySize\&quot;:10023,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lazada-search-fe/lzd-searchbox/0.4.13/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:321.90000000596046,\&quot;duration\&quot;:787.7999999970198,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:321.90000000596046,\&quot;domainLookupStart\&quot;:321.90000000596046,\&quot;domainLookupEnd\&quot;:321.90000000596046,\&quot;connectStart\&quot;:321.90000000596046,\&quot;secureConnectionStart\&quot;:321.90000000596046,\&quot;connectEnd\&quot;:321.90000000596046,\&quot;requestStart\&quot;:389.79999999701977,\&quot;responseStart\&quot;:1096.2000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1109.7000000029802,\&quot;transferSize\&quot;:27954,\&quot;encodedBodySize\&quot;:27654,\&quot;decodedBodySize\&quot;:87513,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://lzd-img-global.slatic.net/us/domino/e21bf0ad45a94777682fb79daf97d072.jpg\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:322,\&quot;duration\&quot;:133.90000000596046,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:322,\&quot;domainLookupStart\&quot;:322,\&quot;domainLookupEnd\&quot;:322,\&quot;connectStart\&quot;:322,\&quot;secureConnectionStart\&quot;:322,\&quot;connectEnd\&quot;:322,\&quot;requestStart\&quot;:390.1000000089407,\&quot;responseStart\&quot;:449.20000000298023,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:455.90000000596046,\&quot;transferSize\&quot;:13351,\&quot;encodedBodySize\&quot;:13051,\&quot;decodedBodySize\&quot;:13051,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://lzd-img-global.slatic.net/us/domino/3b870cb043c7f8a9741cbf66329e294e.png\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:322.20000000298023,\&quot;duration\&quot;:127.90000000596046,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:322.20000000298023,\&quot;domainLookupStart\&quot;:322.20000000298023,\&quot;domainLookupEnd\&quot;:322.20000000298023,\&quot;connectStart\&quot;:322.20000000298023,\&quot;secureConnectionStart\&quot;:322.20000000298023,\&quot;connectEnd\&quot;:322.20000000298023,\&quot;requestStart\&quot;:390.20000000298023,\&quot;responseStart\&quot;:445.1000000089407,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:450.1000000089407,\&quot;transferSize\&quot;:2407,\&quot;encodedBodySize\&quot;:2107,\&quot;decodedBodySize\&quot;:2107,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/code/npm/@ali/multimod-lzd-member__signup-login-pop/0.0.20/lib-signuppop/index.umd.es5.production.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:322.40000000596046,\&quot;duration\&quot;:2881.3999999910593,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:322.40000000596046,\&quot;domainLookupStart\&quot;:322.40000000596046,\&quot;domainLookupEnd\&quot;:322.40000000596046,\&quot;connectStart\&quot;:322.40000000596046,\&quot;secureConnectionStart\&quot;:322.40000000596046,\&quot;connectEnd\&quot;:322.40000000596046,\&quot;requestStart\&quot;:1162.1000000089407,\&quot;responseStart\&quot;:2097.2000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3203.7999999970198,\&quot;transferSize\&quot;:287362,\&quot;encodedBodySize\&quot;:287062,\&quot;decodedBodySize\&quot;:749613,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://assets.alicdn.com/g/alilog??aplus_plugin_lazada/daraz_loader.js,mlog/aplus_int.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:408.79999999701977,\&quot;duration\&quot;:99.5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:408.79999999701977,\&quot;domainLookupStart\&quot;:408.79999999701977,\&quot;domainLookupEnd\&quot;:408.79999999701977,\&quot;connectStart\&quot;:408.79999999701977,\&quot;secureConnectionStart\&quot;:408.79999999701977,\&quot;connectEnd\&quot;:408.79999999701977,\&quot;requestStart\&quot;:412.1000000089407,\&quot;responseStart\&quot;:474.29999999701977,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:508.29999999701977,\&quot;transferSize\&quot;:7644,\&quot;encodedBodySize\&quot;:7344,\&quot;decodedBodySize\&quot;:16418,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://d.alicdn.com/alilog/mlog/aplus/202980191.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:518.9000000059605,\&quot;duration\&quot;:487,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:518.9000000059605,\&quot;domainLookupStart\&quot;:518.9000000059605,\&quot;domainLookupEnd\&quot;:518.9000000059605,\&quot;connectStart\&quot;:518.9000000059605,\&quot;secureConnectionStart\&quot;:518.9000000059605,\&quot;connectEnd\&quot;:518.9000000059605,\&quot;requestStart\&quot;:523.6000000089407,\&quot;responseStart\&quot;:900.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1005.9000000059605,\&quot;transferSize\&quot;:51204,\&quot;encodedBodySize\&quot;:50904,\&quot;decodedBodySize\&quot;:164990,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/??mui/feloader/5.0.5/feloader-min.js,code/npm/@ali/pnpm-react/18.2.0/6a96e9f5.js,code/npm/@ali/pnpm-react/18.2.0/index.js,code/npm/@ali/pnpm-react-dom/18.2.1/280b565f.js,code/npm/@ali/pnpm-react-dom/18.2.1/client.js,code/npm/@ali/pnpm-react-dom/18.2.1/index.js,code/npm/@ali/gcom-lzd-cookie/1.4.0/index.js,code/npm/@ali/gcom-lzd-sites/1.6.0/index.js,code/npm/@ali/gcom-lzd-env/1.3.1/index.js,code/npm/@ali/gcom-lzd-qs/1.3.3/index.js,code/npm/@ali/gcom-jsonp/1.3.0/index.js,code/npm/@ali/gcom-lzd-mtop/1.2.14/index.js,code/npm/@ali/gcom-lzd-data-prefetch/1.3.0/index.js,code/npm/@ali/gcom-lzd-resize/1.4.0/index.js,code/npm/@ali/pnpm-react/18.2.0/jsx-runtime.js,code/npm/@ali/gcom-lzd-version-compare/1.1.0/index.js,code/npm/@ali/gcom-lzd-device/0.0.1/index.js,code/npm/@ali/gcom-lzd-render-v3/1.0.82/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:522,\&quot;duration\&quot;:2263.7000000029802,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:522,\&quot;domainLookupStart\&quot;:522,\&quot;domainLookupEnd\&quot;:522,\&quot;connectStart\&quot;:522,\&quot;secureConnectionStart\&quot;:522,\&quot;connectEnd\&quot;:522,\&quot;requestStart\&quot;:1162.1000000089407,\&quot;responseStart\&quot;:2096.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2785.7000000029802,\&quot;transferSize\&quot;:187212,\&quot;encodedBodySize\&quot;:186912,\&quot;decodedBodySize\&quot;:447704,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://laz-g-cdn.alicdn.com/??mmfe/cps-rt-tracking/0.0.6/index.js,lzdmod/back-to-third-party-app/5.0.2/m/button.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:854.7999999970198,\&quot;duration\&quot;:252.5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:854.7999999970198,\&quot;domainLookupStart\&quot;:854.7999999970198,\&quot;domainLookupEnd\&quot;:854.7999999970198,\&quot;connectStart\&quot;:854.7999999970198,\&quot;secureConnectionStart\&quot;:854.7999999970198,\&quot;connectEnd\&quot;:854.7999999970198,\&quot;requestStart\&quot;:862,\&quot;responseStart\&quot;:1103.7999999970198,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1107.2999999970198,\&quot;transferSize\&quot;:4819,\&quot;encodedBodySize\&quot;:4519,\&quot;decodedBodySize\&quot;:9453,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/cde6690e.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:855.2000000029802,\&quot;duration\&quot;:1221.5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:855.2000000029802,\&quot;domainLookupStart\&quot;:855.2000000029802,\&quot;domainLookupEnd\&quot;:855.2000000029802,\&quot;connectStart\&quot;:855.2000000029802,\&quot;secureConnectionStart\&quot;:855.2000000029802,\&quot;connectEnd\&quot;:855.2000000029802,\&quot;requestStart\&quot;:865.4000000059605,\&quot;responseStart\&quot;:2068.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2076.7000000029802,\&quot;transferSize\&quot;:38558,\&quot;encodedBodySize\&quot;:38258,\&quot;decodedBodySize\&quot;:88330,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/780.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:855.5,\&quot;duration\&quot;:1220.2999999970198,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:855.5,\&quot;domainLookupStart\&quot;:855.5,\&quot;domainLookupEnd\&quot;:855.5,\&quot;connectStart\&quot;:855.5,\&quot;secureConnectionStart\&quot;:855.5,\&quot;connectEnd\&quot;:855.5,\&quot;requestStart\&quot;:865.7999999970198,\&quot;responseStart\&quot;:2068.7000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2075.7999999970198,\&quot;transferSize\&quot;:6888,\&quot;encodedBodySize\&quot;:6588,\&quot;decodedBodySize\&quot;:16857,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/p_index-utils-mockcategorytreedata.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:855.6000000089407,\&quot;duration\&quot;:1630.5999999940395,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:855.6000000089407,\&quot;domainLookupStart\&quot;:855.6000000089407,\&quot;domainLookupEnd\&quot;:855.6000000089407,\&quot;connectStart\&quot;:855.6000000089407,\&quot;secureConnectionStart\&quot;:855.6000000089407,\&quot;connectEnd\&quot;:855.6000000089407,\&quot;requestStart\&quot;:866.2000000029802,\&quot;responseStart\&quot;:2253.7999999970198,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2486.2000000029802,\&quot;transferSize\&quot;:77544,\&quot;encodedBodySize\&quot;:77244,\&quot;decodedBodySize\&quot;:334066,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/696.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:856,\&quot;duration\&quot;:1235.2999999970198,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:856,\&quot;domainLookupStart\&quot;:856,\&quot;domainLookupEnd\&quot;:856,\&quot;connectStart\&quot;:856,\&quot;secureConnectionStart\&quot;:856,\&quot;connectEnd\&quot;:856,\&quot;requestStart\&quot;:866.7000000029802,\&quot;responseStart\&quot;:2078.7999999970198,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2091.2999999970198,\&quot;transferSize\&quot;:10324,\&quot;encodedBodySize\&quot;:10024,\&quot;decodedBodySize\&quot;:28325,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/633.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:856.2000000029802,\&quot;duration\&quot;:1232,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:856.2000000029802,\&quot;domainLookupStart\&quot;:856.2000000029802,\&quot;domainLookupEnd\&quot;:856.2000000029802,\&quot;connectStart\&quot;:856.2000000029802,\&quot;secureConnectionStart\&quot;:856.2000000029802,\&quot;connectEnd\&quot;:856.2000000029802,\&quot;requestStart\&quot;:866.9000000059605,\&quot;responseStart\&quot;:2078.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2088.2000000029802,\&quot;transferSize\&quot;:7703,\&quot;encodedBodySize\&quot;:7403,\&quot;decodedBodySize\&quot;:13854,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/p_index-index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:856.5,\&quot;duration\&quot;:1235.7000000029802,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:856.5,\&quot;domainLookupStart\&quot;:856.5,\&quot;domainLookupEnd\&quot;:856.5,\&quot;connectStart\&quot;:856.5,\&quot;secureConnectionStart\&quot;:856.5,\&quot;connectEnd\&quot;:856.5,\&quot;requestStart\&quot;:867,\&quot;responseStart\&quot;:2079.1000000089407,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2092.2000000029802,\&quot;transferSize\&quot;:4698,\&quot;encodedBodySize\&quot;:4398,\&quot;decodedBodySize\&quot;:11957,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/framework.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:856.7000000029802,\&quot;duration\&quot;:1302.5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:856.7000000029802,\&quot;domainLookupStart\&quot;:856.7000000029802,\&quot;domainLookupEnd\&quot;:856.7000000029802,\&quot;connectStart\&quot;:856.7000000029802,\&quot;secureConnectionStart\&quot;:856.7000000029802,\&quot;connectEnd\&quot;:856.7000000029802,\&quot;requestStart\&quot;:867,\&quot;responseStart\&quot;:2089.2000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2159.2000000029802,\&quot;transferSize\&quot;:83414,\&quot;encodedBodySize\&quot;:83114,\&quot;decodedBodySize\&quot;:203883,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/616.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:856.9000000059605,\&quot;duration\&quot;:1635.5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:856.9000000059605,\&quot;domainLookupStart\&quot;:856.9000000059605,\&quot;domainLookupEnd\&quot;:856.9000000059605,\&quot;connectStart\&quot;:856.9000000059605,\&quot;secureConnectionStart\&quot;:856.9000000059605,\&quot;connectEnd\&quot;:856.9000000059605,\&quot;requestStart\&quot;:867.1000000089407,\&quot;responseStart\&quot;:2482.7000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2492.4000000059605,\&quot;transferSize\&quot;:12480,\&quot;encodedBodySize\&quot;:12180,\&quot;decodedBodySize\&quot;:30723,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/psolution/lzd-head-foot/1.0.59/js/main.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:857.2000000029802,\&quot;duration\&quot;:1398.0999999940395,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:857.2000000029802,\&quot;domainLookupStart\&quot;:857.2000000029802,\&quot;domainLookupEnd\&quot;:857.2000000029802,\&quot;connectStart\&quot;:857.2000000029802,\&quot;secureConnectionStart\&quot;:857.2000000029802,\&quot;connectEnd\&quot;:857.2000000029802,\&quot;requestStart\&quot;:867.5,\&quot;responseStart\&quot;:2252.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:2255.2999999970198,\&quot;transferSize\&quot;:5603,\&quot;encodedBodySize\&quot;:5303,\&quot;decodedBodySize\&quot;:23856,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://member.daraz.com.bd/user/api/getUserTrackInfo\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:1030.7999999970198,\&quot;duration\&quot;:430.80000001192093,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:1030.7999999970198,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:1461.6000000089407,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://member.daraz.com.bd/user/api/getCsrfToken\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3229.4000000059605,\&quot;duration\&quot;:464.20000000298023,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3229.4000000059605,\&quot;domainLookupStart\&quot;:3229.4000000059605,\&quot;domainLookupEnd\&quot;:3229.4000000059605,\&quot;connectStart\&quot;:3229.4000000059605,\&quot;secureConnectionStart\&quot;:3229.4000000059605,\&quot;connectEnd\&quot;:3229.4000000059605,\&quot;requestStart\&quot;:3566.7999999970198,\&quot;responseStart\&quot;:3691.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3693.6000000089407,\&quot;transferSize\&quot;:448,\&quot;encodedBodySize\&quot;:148,\&quot;decodedBodySize\&quot;:148,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://member.daraz.com.bd/user/api/getCsrfToken\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3230,\&quot;duration\&quot;:388,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3230,\&quot;domainLookupStart\&quot;:3230,\&quot;domainLookupEnd\&quot;:3230,\&quot;connectStart\&quot;:3230,\&quot;secureConnectionStart\&quot;:3230,\&quot;connectEnd\&quot;:3230,\&quot;requestStart\&quot;:3322.2000000029802,\&quot;responseStart\&quot;:3554.2999999970198,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3618,\&quot;transferSize\&quot;:448,\&quot;encodedBodySize\&quot;:148,\&quot;decodedBodySize\&quot;:148,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dt8h20ib5-k98ohdir%26cp%3Dnone%26de%3D1%26seq%3D17272534051847%26tm%3D1727253405%26ud%3D700000238955%26ver%3D2.0.35%26type%3Dflow%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3284.7000000029802,\&quot;duration\&quot;:335.09999999403954,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3284.7000000029802,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3619.7999999970198,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/g/tps/imgextra/i1/O1CN015pbohf1gxJXl8J4xa_!!6000000004208-2-tps-1947-1053.png\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3288.1000000089407,\&quot;duration\&quot;:384.79999999701977,\&quot;initiatorType\&quot;:\&quot;css\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3288.1000000089407,\&quot;domainLookupStart\&quot;:3288.1000000089407,\&quot;domainLookupEnd\&quot;:3288.1000000089407,\&quot;connectStart\&quot;:3288.1000000089407,\&quot;secureConnectionStart\&quot;:3288.1000000089407,\&quot;connectEnd\&quot;:3288.1000000089407,\&quot;requestStart\&quot;:3293.5,\&quot;responseStart\&quot;:3339.2000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3672.9000000059605,\&quot;transferSize\&quot;:87789,\&quot;encodedBodySize\&quot;:87489,\&quot;decodedBodySize\&quot;:87489,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://acs-m.daraz.com.bd/h5/mtop.lazada.kangaroo.core.service.route.lzdpagerecommendservice/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1727253405931&amp;sign=bda01ba025725459d62f4bf84c9a5f24&amp;api=mtop.lazada.kangaroo.core.service.route.lzdPageRecommendService&amp;v=1.0&amp;jsonpIncPrefix=kangaroo&amp;timeout=8000&amp;isSec=1&amp;type=originaljson&amp;dataType=jsonp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3435.2000000029802,\&quot;duration\&quot;:447,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3435.2000000029802,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3882.2000000029802,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://member.daraz.com.bd/user/api/getUser\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3451.7999999970198,\&quot;duration\&quot;:341.40000000596046,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3451.7999999970198,\&quot;domainLookupStart\&quot;:3451.7999999970198,\&quot;domainLookupEnd\&quot;:3451.7999999970198,\&quot;connectStart\&quot;:3451.7999999970198,\&quot;secureConnectionStart\&quot;:3451.7999999970198,\&quot;connectEnd\&quot;:3451.7999999970198,\&quot;requestStart\&quot;:3642.2999999970198,\&quot;responseStart\&quot;:3789.6000000089407,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3793.2000000029802,\&quot;transferSize\&quot;:1028,\&quot;encodedBodySize\&quot;:728,\&quot;decodedBodySize\&quot;:1407,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://cart.daraz.com.bd/cart/api/count\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3452.6000000089407,\&quot;duration\&quot;:721.3999999910593,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3452.6000000089407,\&quot;domainLookupStart\&quot;:3452.6000000089407,\&quot;domainLookupEnd\&quot;:3452.6000000089407,\&quot;connectStart\&quot;:3452.6000000089407,\&quot;secureConnectionStart\&quot;:3452.6000000089407,\&quot;connectEnd\&quot;:3452.6000000089407,\&quot;requestStart\&quot;:3635.9000000059605,\&quot;responseStart\&quot;:4171.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4174,\&quot;transferSize\&quot;:356,\&quot;encodedBodySize\&quot;:56,\&quot;decodedBodySize\&quot;:56,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdhome.head_foot.exposure?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26platform%253Dpc%2526venture%253DBD%2526page%253Dhome%2526channel%253Ddefault%3D%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D17eca12%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=0.0.0.0&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3456.5,\&quot;duration\&quot;:169.40000000596046,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3456.5,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3625.9000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://tpsservice-files-inner.cn-hangzhou.oss-cdn.aliyun-inc.com/images/resources/9dd6917e501f4144dd7af71009cceb63-1-1.png?d=1727253405947\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3457.2999999970198,\&quot;duration\&quot;:21040.40000000596,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3457.2999999970198,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:24497.70000000298,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/??/AWSC/AWSC/awsc.js,/sd/baxia-entry/baxiaCommon.js,secdev/entry/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3530.7999999970198,\&quot;duration\&quot;:262,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3530.7999999970198,\&quot;domainLookupStart\&quot;:3530.7999999970198,\&quot;domainLookupEnd\&quot;:3530.7999999970198,\&quot;connectStart\&quot;:3530.7999999970198,\&quot;secureConnectionStart\&quot;:3530.7999999970198,\&quot;connectEnd\&quot;:3530.7999999970198,\&quot;requestStart\&quot;:3626.5,\&quot;responseStart\&quot;:3789.2000000029802,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:3792.7999999970198,\&quot;transferSize\&quot;:10567,\&quot;encodedBodySize\&quot;:10267,\&quot;decodedBodySize\&quot;:24579,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/lzd_sec/epssw/0.0.21/epssw.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3532.2000000029802,\&quot;duration\&quot;:571.7000000029802,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3532.2000000029802,\&quot;domainLookupStart\&quot;:3532.2000000029802,\&quot;domainLookupEnd\&quot;:3532.2000000029802,\&quot;connectStart\&quot;:3532.2000000029802,\&quot;secureConnectionStart\&quot;:3532.2000000029802,\&quot;connectEnd\&quot;:3532.2000000029802,\&quot;requestStart\&quot;:3627.1000000089407,\&quot;responseStart\&quot;:3913.1000000089407,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4103.9000000059605,\&quot;transferSize\&quot;:124573,\&quot;encodedBodySize\&quot;:124273,\&quot;decodedBodySize\&quot;:335501,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://my.daraz.com.bd/api/recentOrders/\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3866.7999999970198,\&quot;duration\&quot;:269.90000000596046,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3866.7999999970198,\&quot;domainLookupStart\&quot;:3866.7999999970198,\&quot;domainLookupEnd\&quot;:3866.7999999970198,\&quot;connectStart\&quot;:3866.7999999970198,\&quot;secureConnectionStart\&quot;:3866.7999999970198,\&quot;connectEnd\&quot;:3866.7999999970198,\&quot;requestStart\&quot;:3986.7000000029802,\&quot;responseStart\&quot;:4113.600000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4136.70000000298,\&quot;transferSize\&quot;:1062,\&quot;encodedBodySize\&quot;:762,\&quot;decodedBodySize\&quot;:762,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534068830%26tm%3D1727253406%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3990,\&quot;duration\&quot;:386.70000000298023,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3990,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4376.70000000298,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/v.gif?logtype=1&amp;title=&amp;pre=https%3A%2F%2Fcart.daraz.com.bd%2F&amp;scr=-&amp;_p_url=https%3A%2F%2Fwww.daraz.com.bd%2F%3Fspm%3Da2o42.cart.header.dhome.55522829U3Cibf&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;aplus&amp;pc_i=kC587HTgwQpZgmoFPnLpTCBLKuwMCUyi&amp;pu_i=700000238955&amp;_hng=BD%257Cen-BD%257CBDT%257C050&amp;daraz_web_version=2.0.0&amp;pageid=vjhkhcrlcaxazehj192285356a5228ba57981d8f23&amp;ps_i=lTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H&amp;_p_ref=https%3A%2F%2Fcart.daraz.com.bd%2F&amp;_p_usertype=returning&amp;utm_origin=https%3A%2F%2Fcart.daraz.com.bd%2F&amp;utm_channel=SEO&amp;cache=4cf656a&amp;jsver=aplus.js&amp;lver=1.6.1&amp;customSdkId=202980191_20210407_200201&amp;platformType=pc&amp;mansndlog=1&amp;tag=1&amp;stag=-1&amp;lstag=-1\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3992,\&quot;duration\&quot;:142,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3992,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4134,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/code/npm/@ali/??gcom-lzd-picture/1.8.1/index.cjs.es5.production.css,gcom-lzd-react-link/1.0.7/index.cjs.es5.production.css,lzdrwb-homepage-react/1.1.48/vendor.cjs.es5.production.css,lzdrwb-homepage-react/1.1.48/index-pc.cjs.es5.production.css\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3993.4000000059605,\&quot;duration\&quot;:142.79999999701977,\&quot;initiatorType\&quot;:\&quot;link\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3993.4000000059605,\&quot;domainLookupStart\&quot;:3993.4000000059605,\&quot;domainLookupEnd\&quot;:3993.4000000059605,\&quot;connectStart\&quot;:3993.4000000059605,\&quot;secureConnectionStart\&quot;:3993.4000000059605,\&quot;connectEnd\&quot;:3993.4000000059605,\&quot;requestStart\&quot;:3997.9000000059605,\&quot;responseStart\&quot;:4112.70000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4136.20000000298,\&quot;transferSize\&quot;:14065,\&quot;encodedBodySize\&quot;:13765,\&quot;decodedBodySize\&quot;:55233,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/code/npm/@ali/??lzdrwb-homepage-react/1.1.48/index-pc.js,gcom-lzd-picture/1.8.1/index.js,gcom-lzd-react-link/1.0.7/index.js,gcom-lzd-push/0.0.6/index.js,pnpm-react-transition-group/4.4.5/index.js,flute-i18n/3.0.1/index.js,lzdrwb-homepage-react/1.1.48/vendor.cjs.es5.production.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:3996,\&quot;duration\&quot;:455.20000000298023,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:3996,\&quot;domainLookupStart\&quot;:3996,\&quot;domainLookupEnd\&quot;:3996,\&quot;connectStart\&quot;:3996,\&quot;secureConnectionStart\&quot;:3996,\&quot;connectEnd\&quot;:3996,\&quot;requestStart\&quot;:3998.9000000059605,\&quot;responseStart\&quot;:4156.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4451.20000000298,\&quot;transferSize\&quot;:90976,\&quot;encodedBodySize\&quot;:90676,\&quot;decodedBodySize\&quot;:243690,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/AWSC/et/1.81.8/et_f.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4074.7000000029802,\&quot;duration\&quot;:333.59999999403954,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4074.7000000029802,\&quot;domainLookupStart\&quot;:4074.7000000029802,\&quot;domainLookupEnd\&quot;:4074.7000000029802,\&quot;connectStart\&quot;:4074.7000000029802,\&quot;secureConnectionStart\&quot;:4074.7000000029802,\&quot;connectEnd\&quot;:4074.7000000029802,\&quot;requestStart\&quot;:4078.1000000089407,\&quot;responseStart\&quot;:4195.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4408.29999999702,\&quot;transferSize\&quot;:97294,\&quot;encodedBodySize\&quot;:96994,\&quot;decodedBodySize\&quot;:273856,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.alicdn.com/secdev/sufei_data/3.9.14/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4076.1000000089407,\&quot;duration\&quot;:107.8999999910593,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4076.1000000089407,\&quot;domainLookupStart\&quot;:4076.1000000089407,\&quot;domainLookupEnd\&quot;:4076.1000000089407,\&quot;connectStart\&quot;:4076.1000000089407,\&quot;secureConnectionStart\&quot;:4076.1000000089407,\&quot;connectEnd\&quot;:4076.1000000089407,\&quot;requestStart\&quot;:4078.7999999970198,\&quot;responseStart\&quot;:4182.100000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4184,\&quot;transferSize\&quot;:7698,\&quot;encodedBodySize\&quot;:7398,\&quot;decodedBodySize\&quot;:17754,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/??/sd/baxia/2.5.20/baxiaCommon.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4078.2000000029802,\&quot;duration\&quot;:395.29999999701977,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4078.2000000029802,\&quot;domainLookupStart\&quot;:4078.2000000029802,\&quot;domainLookupEnd\&quot;:4078.2000000029802,\&quot;connectStart\&quot;:4078.2000000029802,\&quot;secureConnectionStart\&quot;:4078.2000000029802,\&quot;connectEnd\&quot;:4078.2000000029802,\&quot;requestStart\&quot;:4082.5,\&quot;responseStart\&quot;:4471,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4473.5,\&quot;transferSize\&quot;:13941,\&quot;encodedBodySize\&quot;:13641,\&quot;decodedBodySize\&quot;:32010,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/secdev/sufei_data/3.9.10/index.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4079.2999999970198,\&quot;duration\&quot;:299.80000001192093,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4079.2999999970198,\&quot;domainLookupStart\&quot;:4080.2999999970198,\&quot;domainLookupEnd\&quot;:4080.2999999970198,\&quot;connectStart\&quot;:4080.2999999970198,\&quot;secureConnectionStart\&quot;:4080.2999999970198,\&quot;connectEnd\&quot;:4080.2999999970198,\&quot;requestStart\&quot;:4131.20000000298,\&quot;responseStart\&quot;:4225.29999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4379.100000008941,\&quot;transferSize\&quot;:7887,\&quot;encodedBodySize\&quot;:7587,\&quot;decodedBodySize\&quot;:17690,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/AWSC/et/1.77.4/et_f.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4079.7999999970198,\&quot;duration\&quot;:713.9000000059605,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4079.7999999970198,\&quot;domainLookupStart\&quot;:4079.7999999970198,\&quot;domainLookupEnd\&quot;:4079.7999999970198,\&quot;connectStart\&quot;:4079.7999999970198,\&quot;secureConnectionStart\&quot;:4079.7999999970198,\&quot;connectEnd\&quot;:4079.7999999970198,\&quot;requestStart\&quot;:4137.5,\&quot;responseStart\&quot;:4378.70000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4793.70000000298,\&quot;transferSize\&quot;:88052,\&quot;encodedBodySize\&quot;:87752,\&quot;decodedBodySize\&quot;:250821,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534069306%26tm%3D1727253406%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4104.4000000059605,\&quot;duration\&quot;:378,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4104.4000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4482.4000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534063948%26tm%3D1727253406%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4114,\&quot;duration\&quot;:370.20000000298023,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4114,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4484.20000000298,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534062425%26tm%3D1727253406%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4114.9000000059605,\&quot;duration\&quot;:376.59999999403954,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4114.9000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4491.5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534068183%26tm%3D1727253406%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4115.600000008941,\&quot;duration\&quot;:661.6999999880791,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4115.600000008941,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4777.29999999702,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534068016%26tm%3D1727253406%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4116.4000000059605,\&quot;duration\&quot;:661.3999999910593,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4116.4000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4777.79999999702,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://ase.aliexpress.com/upload/web/info\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4545.4000000059605,\&quot;duration\&quot;:220.79999999701977,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4545.4000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4766.20000000298,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534073666%26tm%3D1727253407%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4679.70000000298,\&quot;duration\&quot;:495.70000000298023,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4679.70000000298,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5175.4000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/85d82c6f-8b7e-4ad9-a10f-2ef57c3d002b_BD-1920-500.gif_2200x2200q80.gif_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4829.600000008941,\&quot;duration\&quot;:527.1999999880791,\&quot;initiatorType\&quot;:\&quot;css\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4829.600000008941,\&quot;domainLookupStart\&quot;:4829.600000008941,\&quot;domainLookupEnd\&quot;:4829.600000008941,\&quot;connectStart\&quot;:4829.600000008941,\&quot;secureConnectionStart\&quot;:4829.600000008941,\&quot;connectEnd\&quot;:4829.600000008941,\&quot;requestStart\&quot;:4833.100000008941,\&quot;responseStart\&quot;:5100.70000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5356.79999999702,\&quot;transferSize\&quot;:85222,\&quot;encodedBodySize\&quot;:84922,\&quot;decodedBodySize\&quot;:84922,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4829.9000000059605,\&quot;duration\&quot;:0,\&quot;initiatorType\&quot;:\&quot;css\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4829.9000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:4829.9000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534079062%26tm%3D1727253407%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4880.79999999702,\&quot;duration\&quot;:456.5,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4880.79999999702,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5337.29999999702,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/587590ab-350e-47c4-b1bb-10ec86249479_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4887.29999999702,\&quot;duration\&quot;:973,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4887.29999999702,\&quot;domainLookupStart\&quot;:4887.29999999702,\&quot;domainLookupEnd\&quot;:4887.29999999702,\&quot;connectStart\&quot;:4887.29999999702,\&quot;secureConnectionStart\&quot;:4887.29999999702,\&quot;connectEnd\&quot;:4887.29999999702,\&quot;requestStart\&quot;:4946.20000000298,\&quot;responseStart\&quot;:5513.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5860.29999999702,\&quot;transferSize\&quot;:68956,\&quot;encodedBodySize\&quot;:68656,\&quot;decodedBodySize\&quot;:68656,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/851bead1-5dc7-4980-80f6-b5fc9f1b2c4b_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4887.70000000298,\&quot;duration\&quot;:2259.2000000029802,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4887.70000000298,\&quot;domainLookupStart\&quot;:4887.70000000298,\&quot;domainLookupEnd\&quot;:4887.70000000298,\&quot;connectStart\&quot;:4887.70000000298,\&quot;secureConnectionStart\&quot;:4887.70000000298,\&quot;connectEnd\&quot;:4887.70000000298,\&quot;requestStart\&quot;:4950.29999999702,\&quot;responseStart\&quot;:6011,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7146.9000000059605,\&quot;transferSize\&quot;:91458,\&quot;encodedBodySize\&quot;:91158,\&quot;decodedBodySize\&quot;:91158,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/49e4db9a-2aa5-4516-bd02-cb802e1dca3c_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4887.79999999702,\&quot;duration\&quot;:2405.800000011921,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4887.79999999702,\&quot;domainLookupStart\&quot;:4887.79999999702,\&quot;domainLookupEnd\&quot;:4887.79999999702,\&quot;connectStart\&quot;:4887.79999999702,\&quot;secureConnectionStart\&quot;:4887.79999999702,\&quot;connectEnd\&quot;:4887.79999999702,\&quot;requestStart\&quot;:4951.4000000059605,\&quot;responseStart\&quot;:6149.100000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7293.600000008941,\&quot;transferSize\&quot;:132084,\&quot;encodedBodySize\&quot;:131784,\&quot;decodedBodySize\&quot;:131784,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/f7affb34-6191-4489-9ca9-566d085ac219_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4888.100000008941,\&quot;duration\&quot;:2202.3999999910593,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4888.100000008941,\&quot;domainLookupStart\&quot;:4888.100000008941,\&quot;domainLookupEnd\&quot;:4888.100000008941,\&quot;connectStart\&quot;:4888.100000008941,\&quot;secureConnectionStart\&quot;:4888.100000008941,\&quot;connectEnd\&quot;:4888.100000008941,\&quot;requestStart\&quot;:4952,\&quot;responseStart\&quot;:6027.100000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7090.5,\&quot;transferSize\&quot;:88082,\&quot;encodedBodySize\&quot;:87782,\&quot;decodedBodySize\&quot;:87782,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/b532d6a4-2d70-4400-965f-c0a9e8377dba_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4888.20000000298,\&quot;duration\&quot;:2201.7000000029802,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4888.20000000298,\&quot;domainLookupStart\&quot;:4888.20000000298,\&quot;domainLookupEnd\&quot;:4888.20000000298,\&quot;connectStart\&quot;:4888.20000000298,\&quot;secureConnectionStart\&quot;:4888.20000000298,\&quot;connectEnd\&quot;:4888.20000000298,\&quot;requestStart\&quot;:4953.29999999702,\&quot;responseStart\&quot;:6192.600000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7089.9000000059605,\&quot;transferSize\&quot;:58288,\&quot;encodedBodySize\&quot;:57988,\&quot;decodedBodySize\&quot;:57988,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/ef4189dc-e164-4fcf-b841-997f3cd462bb_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4888.4000000059605,\&quot;duration\&quot;:2399.3999999910593,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4888.4000000059605,\&quot;domainLookupStart\&quot;:4888.4000000059605,\&quot;domainLookupEnd\&quot;:4888.4000000059605,\&quot;connectStart\&quot;:4888.4000000059605,\&quot;secureConnectionStart\&quot;:4888.4000000059605,\&quot;connectEnd\&quot;:4888.4000000059605,\&quot;requestStart\&quot;:4957.5,\&quot;responseStart\&quot;:6162.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7287.79999999702,\&quot;transferSize\&quot;:113370,\&quot;encodedBodySize\&quot;:113070,\&quot;decodedBodySize\&quot;:113070,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/0605d2e7-72e3-4558-88e6-fa26f6a0492d_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4888.600000008941,\&quot;duration\&quot;:2122.5,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4888.600000008941,\&quot;domainLookupStart\&quot;:4888.600000008941,\&quot;domainLookupEnd\&quot;:4888.600000008941,\&quot;connectStart\&quot;:4888.600000008941,\&quot;secureConnectionStart\&quot;:4888.600000008941,\&quot;connectEnd\&quot;:4888.600000008941,\&quot;requestStart\&quot;:4958,\&quot;responseStart\&quot;:6057.100000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7011.100000008941,\&quot;transferSize\&quot;:60212,\&quot;encodedBodySize\&quot;:59912,\&quot;decodedBodySize\&quot;:59912,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/e93e55f2-4173-4180-854b-867ae88f09eb_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4888.9000000059605,\&quot;duration\&quot;:2180.0999999940395,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4888.9000000059605,\&quot;domainLookupStart\&quot;:4888.9000000059605,\&quot;domainLookupEnd\&quot;:4888.9000000059605,\&quot;connectStart\&quot;:4888.9000000059605,\&quot;secureConnectionStart\&quot;:4888.9000000059605,\&quot;connectEnd\&quot;:4888.9000000059605,\&quot;requestStart\&quot;:4958.70000000298,\&quot;responseStart\&quot;:6247.29999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7069,\&quot;transferSize\&quot;:64798,\&quot;encodedBodySize\&quot;:64498,\&quot;decodedBodySize\&quot;:64498,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/12dfcabb-afbb-4922-929e-2c0b8a53b20a_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4889.100000008941,\&quot;duration\&quot;:1841.699999988079,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4889.100000008941,\&quot;domainLookupStart\&quot;:4889.100000008941,\&quot;domainLookupEnd\&quot;:4889.100000008941,\&quot;connectStart\&quot;:4889.100000008941,\&quot;secureConnectionStart\&quot;:4889.100000008941,\&quot;connectEnd\&quot;:4889.100000008941,\&quot;requestStart\&quot;:4959.100000008941,\&quot;responseStart\&quot;:6092.100000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6730.79999999702,\&quot;transferSize\&quot;:52732,\&quot;encodedBodySize\&quot;:52432,\&quot;decodedBodySize\&quot;:52432,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/b8f62762-3e64-4de4-afa9-bf07c6e029f3_BD-1976-688.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4889.29999999702,\&quot;duration\&quot;:1078.7000000029802,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4889.29999999702,\&quot;domainLookupStart\&quot;:4889.29999999702,\&quot;domainLookupEnd\&quot;:4889.29999999702,\&quot;connectStart\&quot;:4889.29999999702,\&quot;secureConnectionStart\&quot;:4889.29999999702,\&quot;connectEnd\&quot;:4889.29999999702,\&quot;requestStart\&quot;:4946.9000000059605,\&quot;responseStart\&quot;:5513.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5968,\&quot;transferSize\&quot;:113962,\&quot;encodedBodySize\&quot;:113662,\&quot;decodedBodySize\&quot;:113662,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/1ee015d6a5c62fd0339c88c657c1c183.jpg_2200x2200q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4889.600000008941,\&quot;duration\&quot;:769.7999999970198,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4889.600000008941,\&quot;domainLookupStart\&quot;:4940,\&quot;domainLookupEnd\&quot;:4940,\&quot;connectStart\&quot;:4940,\&quot;secureConnectionStart\&quot;:4941.79999999702,\&quot;connectEnd\&quot;:5254.70000000298,\&quot;requestStart\&quot;:4945.70000000298,\&quot;responseStart\&quot;:5299.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5659.4000000059605,\&quot;transferSize\&quot;:18434,\&quot;encodedBodySize\&quot;:18134,\&quot;decodedBodySize\&quot;:18134,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/g/tps/imgextra/i4/O1CN01cAMOjU1zqQJZU8EbT_!!6000000006765-2-tps-19-18.png_2200x2200q80.png_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4889.70000000298,\&quot;duration\&quot;:732.4000000059605,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4889.70000000298,\&quot;domainLookupStart\&quot;:4889.70000000298,\&quot;domainLookupEnd\&quot;:4889.70000000298,\&quot;connectStart\&quot;:4889.70000000298,\&quot;secureConnectionStart\&quot;:4889.70000000298,\&quot;connectEnd\&quot;:4889.70000000298,\&quot;requestStart\&quot;:4959.4000000059605,\&quot;responseStart\&quot;:5619.70000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5622.100000008941,\&quot;transferSize\&quot;:568,\&quot;encodedBodySize\&quot;:268,\&quot;decodedBodySize\&quot;:268,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/g/tps/imgextra/i2/O1CN01n3PMa828kJZVuCbPp_!!6000000007970-2-tps-72-72.png_2200x2200q80.png_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4890,\&quot;duration\&quot;:627.2999999970198,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4890,\&quot;domainLookupStart\&quot;:4890,\&quot;domainLookupEnd\&quot;:4890,\&quot;connectStart\&quot;:4890,\&quot;secureConnectionStart\&quot;:4890,\&quot;connectEnd\&quot;:4890,\&quot;requestStart\&quot;:4947.29999999702,\&quot;responseStart\&quot;:5513.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5517.29999999702,\&quot;transferSize\&quot;:1472,\&quot;encodedBodySize\&quot;:1172,\&quot;decodedBodySize\&quot;:1172,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/g/tps/imgextra/i3/O1CN01J03SMW1lebTE7xkaN_!!6000000004844-2-tps-72-72.png_2200x2200q80.png_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4890.20000000298,\&quot;duration\&quot;:626.2000000029802,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4890.20000000298,\&quot;domainLookupStart\&quot;:4890.20000000298,\&quot;domainLookupEnd\&quot;:4890.20000000298,\&quot;connectStart\&quot;:4890.20000000298,\&quot;secureConnectionStart\&quot;:4890.20000000298,\&quot;connectEnd\&quot;:4890.20000000298,\&quot;requestStart\&quot;:4947.5,\&quot;responseStart\&quot;:5513.600000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5516.4000000059605,\&quot;transferSize\&quot;:1424,\&quot;encodedBodySize\&quot;:1124,\&quot;decodedBodySize\&quot;:1124,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/us/domino/2850823f9c0bfe3a1d4679c232e58fe8.png_2200x2200q80.png_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4890.5,\&quot;duration\&quot;:729.6000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4890.5,\&quot;domainLookupStart\&quot;:4890.5,\&quot;domainLookupEnd\&quot;:4890.5,\&quot;connectStart\&quot;:4890.5,\&quot;secureConnectionStart\&quot;:4890.5,\&quot;connectEnd\&quot;:4890.5,\&quot;requestStart\&quot;:4947.70000000298,\&quot;responseStart\&quot;:5513.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5620.100000008941,\&quot;transferSize\&quot;:13916,\&quot;encodedBodySize\&quot;:13616,\&quot;decodedBodySize\&quot;:13616,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/f97512d1d2d12fa4f855296bd990371e.jpg_400x400q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4890.79999999702,\&quot;duration\&quot;:219.6000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4890.79999999702,\&quot;domainLookupStart\&quot;:4890.79999999702,\&quot;domainLookupEnd\&quot;:4890.79999999702,\&quot;connectStart\&quot;:4890.79999999702,\&quot;secureConnectionStart\&quot;:4890.79999999702,\&quot;connectEnd\&quot;:4890.79999999702,\&quot;requestStart\&quot;:4910.600000008941,\&quot;responseStart\&quot;:5108.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5110.4000000059605,\&quot;transferSize\&quot;:13668,\&quot;encodedBodySize\&quot;:13368,\&quot;decodedBodySize\&quot;:13368,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/bd7390f1ccd74846be6b586daf1fac7e.jpg_400x400q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4891,\&quot;duration\&quot;:2504.6000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4891,\&quot;domainLookupStart\&quot;:4891,\&quot;domainLookupEnd\&quot;:4891,\&quot;connectStart\&quot;:4891,\&quot;secureConnectionStart\&quot;:4891,\&quot;connectEnd\&quot;:4891,\&quot;requestStart\&quot;:4911.70000000298,\&quot;responseStart\&quot;:7367.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7395.600000008941,\&quot;transferSize\&quot;:21474,\&quot;encodedBodySize\&quot;:21174,\&quot;decodedBodySize\&quot;:21174,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/ee0a4732b9e78b8317ec9baa9915e14c.jpg_400x400q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4891.20000000298,\&quot;duration\&quot;:2562.4000000059605,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4891.20000000298,\&quot;domainLookupStart\&quot;:4891.20000000298,\&quot;domainLookupEnd\&quot;:4891.20000000298,\&quot;connectStart\&quot;:4891.20000000298,\&quot;secureConnectionStart\&quot;:4891.20000000298,\&quot;connectEnd\&quot;:4891.20000000298,\&quot;requestStart\&quot;:4912.600000008941,\&quot;responseStart\&quot;:7451.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7453.600000008941,\&quot;transferSize\&quot;:21964,\&quot;encodedBodySize\&quot;:21664,\&quot;decodedBodySize\&quot;:21664,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/5f27369a612a687cce9ee9dd986ea0c6.jpg_400x400q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4891.5,\&quot;duration\&quot;:2563.2000000029802,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4891.5,\&quot;domainLookupStart\&quot;:4891.5,\&quot;domainLookupEnd\&quot;:4891.5,\&quot;connectStart\&quot;:4891.5,\&quot;secureConnectionStart\&quot;:4891.5,\&quot;connectEnd\&quot;:4891.5,\&quot;requestStart\&quot;:4912.79999999702,\&quot;responseStart\&quot;:7451.600000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7454.70000000298,\&quot;transferSize\&quot;:28382,\&quot;encodedBodySize\&quot;:28082,\&quot;decodedBodySize\&quot;:28082,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/g/kf/S6e2e4b94aa5142c1a586d47dcfe3134bT.jpg_400x400q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4891.70000000298,\&quot;duration\&quot;:2573.5,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4891.70000000298,\&quot;domainLookupStart\&quot;:4891.70000000298,\&quot;domainLookupEnd\&quot;:4891.70000000298,\&quot;connectStart\&quot;:4891.70000000298,\&quot;secureConnectionStart\&quot;:4891.70000000298,\&quot;connectEnd\&quot;:4891.70000000298,\&quot;requestStart\&quot;:4914.100000008941,\&quot;responseStart\&quot;:7461.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7465.20000000298,\&quot;transferSize\&quot;:9180,\&quot;encodedBodySize\&quot;:8880,\&quot;decodedBodySize\&quot;:8880,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/362e52401e0136776a4586ed22905bb5.jpg_400x400q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4892,\&quot;duration\&quot;:2736.2000000029802,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4892,\&quot;domainLookupStart\&quot;:4892,\&quot;domainLookupEnd\&quot;:4892,\&quot;connectStart\&quot;:4892,\&quot;secureConnectionStart\&quot;:4892,\&quot;connectEnd\&quot;:4892,\&quot;requestStart\&quot;:4914.29999999702,\&quot;responseStart\&quot;:7626,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7628.20000000298,\&quot;transferSize\&quot;:12950,\&quot;encodedBodySize\&quot;:12650,\&quot;decodedBodySize\&quot;:12650,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/2190fb0a1a7b0c0204cb99ea6e3c3106.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4892.20000000298,\&quot;duration\&quot;:1358.4000000059605,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4892.20000000298,\&quot;domainLookupStart\&quot;:5113.70000000298,\&quot;domainLookupEnd\&quot;:5113.70000000298,\&quot;connectStart\&quot;:5113.70000000298,\&quot;secureConnectionStart\&quot;:5115.20000000298,\&quot;connectEnd\&quot;:5865.4000000059605,\&quot;requestStart\&quot;:5117.9000000059605,\&quot;responseStart\&quot;:6068.9000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6250.600000008941,\&quot;transferSize\&quot;:5842,\&quot;encodedBodySize\&quot;:5542,\&quot;decodedBodySize\&quot;:5542,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/5f4099c17891c3bd3b934e15f5dbb533.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4892.4000000059605,\&quot;duration\&quot;:1368.5,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4892.4000000059605,\&quot;domainLookupStart\&quot;:4892.4000000059605,\&quot;domainLookupEnd\&quot;:4892.4000000059605,\&quot;connectStart\&quot;:4892.4000000059605,\&quot;secureConnectionStart\&quot;:4892.4000000059605,\&quot;connectEnd\&quot;:4892.4000000059605,\&quot;requestStart\&quot;:5118.29999999702,\&quot;responseStart\&quot;:6256.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6260.9000000059605,\&quot;transferSize\&quot;:5118,\&quot;encodedBodySize\&quot;:4818,\&quot;decodedBodySize\&quot;:4818,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/g/kf/Saa669798dce1489daa25f6d90539608dS.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4892.70000000298,\&quot;duration\&quot;:2369.5999999940395,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4892.70000000298,\&quot;domainLookupStart\&quot;:4892.70000000298,\&quot;domainLookupEnd\&quot;:4892.70000000298,\&quot;connectStart\&quot;:4892.70000000298,\&quot;secureConnectionStart\&quot;:4892.70000000298,\&quot;connectEnd\&quot;:4892.70000000298,\&quot;requestStart\&quot;:5119.70000000298,\&quot;responseStart\&quot;:7195.20000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7262.29999999702,\&quot;transferSize\&quot;:4456,\&quot;encodedBodySize\&quot;:4156,\&quot;decodedBodySize\&quot;:4156,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/10dd44512b5c79636fc14cb96c71c6f7.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4893,\&quot;duration\&quot;:2264.2999999970198,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4893,\&quot;domainLookupStart\&quot;:4893,\&quot;domainLookupEnd\&quot;:4893,\&quot;connectStart\&quot;:4893,\&quot;secureConnectionStart\&quot;:4893,\&quot;connectEnd\&quot;:4893,\&quot;requestStart\&quot;:5119.20000000298,\&quot;responseStart\&quot;:6262.29999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7157.29999999702,\&quot;transferSize\&quot;:5206,\&quot;encodedBodySize\&quot;:4906,\&quot;decodedBodySize\&quot;:4906,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/cab7b338f4234d7687ab63d91f217d48.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4893.29999999702,\&quot;duration\&quot;:2511.9000000059605,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4893.29999999702,\&quot;domainLookupStart\&quot;:4893.29999999702,\&quot;domainLookupEnd\&quot;:4893.29999999702,\&quot;connectStart\&quot;:4893.29999999702,\&quot;secureConnectionStart\&quot;:4893.29999999702,\&quot;connectEnd\&quot;:4893.29999999702,\&quot;requestStart\&quot;:5118.9000000059605,\&quot;responseStart\&quot;:7269.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7405.20000000298,\&quot;transferSize\&quot;:2660,\&quot;encodedBodySize\&quot;:2360,\&quot;decodedBodySize\&quot;:2360,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/554eb247370da56498228b90027d0da8.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4893.5,\&quot;duration\&quot;:1365.6000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4893.5,\&quot;domainLookupStart\&quot;:4893.5,\&quot;domainLookupEnd\&quot;:4893.5,\&quot;connectStart\&quot;:4893.5,\&quot;secureConnectionStart\&quot;:4893.5,\&quot;connectEnd\&quot;:4893.5,\&quot;requestStart\&quot;:5118.70000000298,\&quot;responseStart\&quot;:6256.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6259.100000008941,\&quot;transferSize\&quot;:798,\&quot;encodedBodySize\&quot;:498,\&quot;decodedBodySize\&quot;:498,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/f0f46d329af8c9dad7efd3f1879a2074.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4893.9000000059605,\&quot;duration\&quot;:2279.0999999940395,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4893.9000000059605,\&quot;domainLookupStart\&quot;:4893.9000000059605,\&quot;domainLookupEnd\&quot;:4893.9000000059605,\&quot;connectStart\&quot;:4893.9000000059605,\&quot;secureConnectionStart\&quot;:4893.9000000059605,\&quot;connectEnd\&quot;:4893.9000000059605,\&quot;requestStart\&quot;:5119.4000000059605,\&quot;responseStart\&quot;:7156.70000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7173,\&quot;transferSize\&quot;:3932,\&quot;encodedBodySize\&quot;:3632,\&quot;decodedBodySize\&quot;:3632,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/g/kf/S63a851da34a64acaaff047414d8fa84fN.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4894.20000000298,\&quot;duration\&quot;:2299.9000000059605,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4894.20000000298,\&quot;domainLookupStart\&quot;:4894.20000000298,\&quot;domainLookupEnd\&quot;:4894.20000000298,\&quot;connectStart\&quot;:4894.20000000298,\&quot;secureConnectionStart\&quot;:4894.20000000298,\&quot;connectEnd\&quot;:4894.20000000298,\&quot;requestStart\&quot;:5120,\&quot;responseStart\&quot;:7172.5,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7194.100000008941,\&quot;transferSize\&quot;:3590,\&quot;encodedBodySize\&quot;:3290,\&quot;decodedBodySize\&quot;:3290,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/a7eb9452d8f85777a3abdf86ecc158b1.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4894.4000000059605,\&quot;duration\&quot;:2574.2999999970198,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4894.4000000059605,\&quot;domainLookupStart\&quot;:4894.4000000059605,\&quot;domainLookupEnd\&quot;:4894.4000000059605,\&quot;connectStart\&quot;:4894.4000000059605,\&quot;secureConnectionStart\&quot;:4894.4000000059605,\&quot;connectEnd\&quot;:4894.4000000059605,\&quot;requestStart\&quot;:5120.70000000298,\&quot;responseStart\&quot;:7404.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7468.70000000298,\&quot;transferSize\&quot;:9356,\&quot;encodedBodySize\&quot;:9056,\&quot;decodedBodySize\&quot;:9056,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/cdd65a6c948a27219312037520e08e54.png_170x170q80.png_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4894.70000000298,\&quot;duration\&quot;:2586,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4894.70000000298,\&quot;domainLookupStart\&quot;:4894.70000000298,\&quot;domainLookupEnd\&quot;:4894.70000000298,\&quot;connectStart\&quot;:4894.70000000298,\&quot;secureConnectionStart\&quot;:4894.70000000298,\&quot;connectEnd\&quot;:4894.70000000298,\&quot;requestStart\&quot;:5121,\&quot;responseStart\&quot;:7476.70000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7480.70000000298,\&quot;transferSize\&quot;:4028,\&quot;encodedBodySize\&quot;:3728,\&quot;decodedBodySize\&quot;:3728,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/e9e2470ba98933b2eefc3a4bfef04b41.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4895,\&quot;duration\&quot;:2375,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4895,\&quot;domainLookupStart\&quot;:4895,\&quot;domainLookupEnd\&quot;:4895,\&quot;connectStart\&quot;:4895,\&quot;secureConnectionStart\&quot;:4895,\&quot;connectEnd\&quot;:4895,\&quot;requestStart\&quot;:5121.29999999702,\&quot;responseStart\&quot;:7261.79999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7270,\&quot;transferSize\&quot;:2638,\&quot;encodedBodySize\&quot;:2338,\&quot;decodedBodySize\&quot;:2338,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/9cd3f6ebb90dfc94c9bd0779f6524f09.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4895.20000000298,\&quot;duration\&quot;:2582.5,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4895.20000000298,\&quot;domainLookupStart\&quot;:4895.20000000298,\&quot;domainLookupEnd\&quot;:4895.20000000298,\&quot;connectStart\&quot;:4895.20000000298,\&quot;secureConnectionStart\&quot;:4895.20000000298,\&quot;connectEnd\&quot;:4895.20000000298,\&quot;requestStart\&quot;:5121.79999999702,\&quot;responseStart\&quot;:7473.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7477.70000000298,\&quot;transferSize\&quot;:1268,\&quot;encodedBodySize\&quot;:968,\&quot;decodedBodySize\&quot;:968,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/892015563cda8cc9d786987e12041b4a.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4895.5,\&quot;duration\&quot;:2644.1000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4895.5,\&quot;domainLookupStart\&quot;:4895.5,\&quot;domainLookupEnd\&quot;:4895.5,\&quot;connectStart\&quot;:4895.5,\&quot;secureConnectionStart\&quot;:4895.5,\&quot;connectEnd\&quot;:4895.5,\&quot;requestStart\&quot;:5122,\&quot;responseStart\&quot;:7477,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7539.600000008941,\&quot;transferSize\&quot;:10000,\&quot;encodedBodySize\&quot;:9700,\&quot;decodedBodySize\&quot;:9700,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/9f26b40b3af7b7cb55300e64a30e92fd.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4895.70000000298,\&quot;duration\&quot;:2695.7999999970198,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4895.70000000298,\&quot;domainLookupStart\&quot;:4895.70000000298,\&quot;domainLookupEnd\&quot;:4895.70000000298,\&quot;connectStart\&quot;:4895.70000000298,\&quot;secureConnectionStart\&quot;:4895.70000000298,\&quot;connectEnd\&quot;:4895.70000000298,\&quot;requestStart\&quot;:5122.29999999702,\&quot;responseStart\&quot;:7539,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7591.5,\&quot;transferSize\&quot;:2214,\&quot;encodedBodySize\&quot;:1914,\&quot;decodedBodySize\&quot;:1914,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/8b9e30f2229deeea30e09692fb9b6e19.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4896,\&quot;duration\&quot;:2576.2999999970198,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4896,\&quot;domainLookupStart\&quot;:4896,\&quot;domainLookupEnd\&quot;:4896,\&quot;connectStart\&quot;:4896,\&quot;secureConnectionStart\&quot;:4896,\&quot;connectEnd\&quot;:4896,\&quot;requestStart\&quot;:5122.5,\&quot;responseStart\&quot;:7468.20000000298,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7472.29999999702,\&quot;transferSize\&quot;:3580,\&quot;encodedBodySize\&quot;:3280,\&quot;decodedBodySize\&quot;:3280,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.drz.lazcdn.com/static/bd/p/8534dc5804a09278269dabccd8daad6c.jpg_170x170q80.jpg_.webp\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4896.20000000298,\&quot;duration\&quot;:2700,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4896.20000000298,\&quot;domainLookupStart\&quot;:4896.20000000298,\&quot;domainLookupEnd\&quot;:4896.20000000298,\&quot;connectStart\&quot;:4896.20000000298,\&quot;secureConnectionStart\&quot;:4896.20000000298,\&quot;connectEnd\&quot;:4896.20000000298,\&quot;requestStart\&quot;:5122.70000000298,\&quot;responseStart\&quot;:7593,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7596.20000000298,\&quot;transferSize\&quot;:3920,\&quot;encodedBodySize\&quot;:3620,\&quot;decodedBodySize\&quot;:3620,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdhome.desktop.app_download_module?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26venture%253DBD%3D%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D7e19220%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4896.5,\&quot;duration\&quot;:342.40000000596046,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4896.5,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5238.9000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://acs-m.daraz.com.bd/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.2&amp;appKey=24937400&amp;t=1727253407395&amp;sign=5376efdec4e21dc6ad6fa9bde295171d&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=BD&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22BD%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%22vjhkH24crl4CAXazEh71JJEn%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4931.5,\&quot;duration\&quot;:907.7000000029802,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4931.5,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5839.20000000298,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:200,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://g.lazcdn.com/g/AWSC/fireyejs/1.228.23/fireyejs.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:4963.79999999702,\&quot;duration\&quot;:707.1000000089407,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:4963.79999999702,\&quot;domainLookupStart\&quot;:4963.79999999702,\&quot;domainLookupEnd\&quot;:4963.79999999702,\&quot;connectStart\&quot;:4963.79999999702,\&quot;secureConnectionStart\&quot;:4963.79999999702,\&quot;connectEnd\&quot;:4963.79999999702,\&quot;requestStart\&quot;:5123,\&quot;responseStart\&quot;:5347.29999999702,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5670.9000000059605,\&quot;transferSize\&quot;:173525,\&quot;encodedBodySize\&quot;:173225,\&quot;decodedBodySize\&quot;:439211,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.bannerSliderDesktop?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.bannerSliderDesktop.d_1%26venture%3DBD%26bannerTitle%3D%2523Paid%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D4d949ca%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5012.29999999702,\&quot;duration\&quot;:370.40000000596046,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5012.29999999702,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5382.70000000298,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.bannerSliderDesktop?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.bannerSliderDesktop.d_0%26venture%3DBD%26id%3DJ_MuiSlider%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D452a923%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5012.600000008941,\&quot;duration\&quot;:432.19999998807907,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5012.600000008941,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5444.79999999702,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.countdownPC?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.countdownPC.d_0%26id%3DJ_CountdownCard%26venture%3DBD%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3Dee0cc6b%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5012.79999999702,\&quot;duration\&quot;:529.1000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5012.79999999702,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5541.9000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.FlashSale?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.FlashSale.d_shopMore%26venture%3DBD%26id%3D%26name%3DSHOP%2520ALL%2520PRODUCTS%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D3dd2f12%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5013.100000008941,\&quot;duration\&quot;:641.5,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5013.100000008941,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5654.600000008941,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.FlashSale?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.FlashSale.d_0%26id%3DJ_FlashSale%26venture%3DBD%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3Ddedec%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5013.4000000059605,\&quot;duration\&quot;:676.0999999940395,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5013.4000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:5689.5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://3dvhel.tdum.alibaba.com/dss.js\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5738.600000008941,\&quot;duration\&quot;:1587.7999999970198,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5738.600000008941,\&quot;domainLookupStart\&quot;:5738.600000008941,\&quot;domainLookupEnd\&quot;:5738.600000008941,\&quot;connectStart\&quot;:5738.600000008941,\&quot;secureConnectionStart\&quot;:5738.600000008941,\&quot;connectEnd\&quot;:5738.600000008941,\&quot;requestStart\&quot;:6873,\&quot;responseStart\&quot;:7320.4000000059605,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7326.4000000059605,\&quot;transferSize\&quot;:362,\&quot;encodedBodySize\&quot;:62,\&quot;decodedBodySize\&quot;:52,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.lazcdn.com/g/tps/imgextra/i4/O1CN0173jtGL1HbugxKaYeH_!!6000000000777-0-tps-518-518.jpg\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5887,\&quot;duration\&quot;:487.79999999701977,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h3\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5887,\&quot;domainLookupStart\&quot;:5887,\&quot;domainLookupEnd\&quot;:5887,\&quot;connectStart\&quot;:5887,\&quot;secureConnectionStart\&quot;:5887,\&quot;connectEnd\&quot;:5887,\&quot;requestStart\&quot;:5890.20000000298,\&quot;responseStart\&quot;:6372,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6374.79999999702,\&quot;transferSize\&quot;:4114,\&quot;encodedBodySize\&quot;:3814,\&quot;decodedBodySize\&quot;:3814,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://img.alicdn.com/imgextra/i2/O1CN01m9OC6a1UK86X51Dcq_!!6000000002498-2-tps-108-54.png\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5887.29999999702,\&quot;duration\&quot;:209.6000000089407,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;h2\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5887.29999999702,\&quot;domainLookupStart\&quot;:5887.29999999702,\&quot;domainLookupEnd\&quot;:5887.29999999702,\&quot;connectStart\&quot;:5887.29999999702,\&quot;secureConnectionStart\&quot;:5887.29999999702,\&quot;connectEnd\&quot;:5887.29999999702,\&quot;requestStart\&quot;:5890.4000000059605,\&quot;responseStart\&quot;:6090.100000008941,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6096.9000000059605,\&quot;transferSize\&quot;:1791,\&quot;encodedBodySize\&quot;:1491,\&quot;decodedBodySize\&quot;:1491,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534089078%26tm%3D1727253408%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5993.20000000298,\&quot;duration\&quot;:765.7999999970198,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5993.20000000298,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6759,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534082309%26tm%3D1727253408%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:5994.100000008941,\&quot;duration\&quot;:765.7999999970198,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:5994.100000008941,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:6759.9000000059605,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D1727253409142%26tm%3D1727253409%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:7279.70000000298,\&quot;duration\&quot;:296.29999999701977,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:7279.70000000298,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:7576,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534108217%26tm%3D1727253410%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:7895.9000000059605,\&quot;duration\&quot;:277.59999999403954,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:7895.9000000059605,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:8173.5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://px-intl.ucweb.com/api/v1/jssdk/upload?wpk-header=app%3Dzj3qxh87-qodddpp2%26cp%3Dnone%26de%3D1%26seq%3D17272534107873%26tm%3D1727253410%26ud%3DvjhkH24crl4CAXazEh71JJEn%26ver%3D2.0.35%26type%3Djssdkidx%26sver%3D2.3.23%26sign%3D9bf8a190ef82c5049df7b199c599c45b&amp;uc_param_str=prveosfrnwutmisvbditcu\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:7897.100000008941,\&quot;duration\&quot;:275.8999999910593,\&quot;initiatorType\&quot;:\&quot;beacon\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:7897.100000008941,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:8173,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.bannerSliderDesktop?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.bannerSliderDesktop.d_2%26venture%3DBD%26bannerTitle%3DPay%2520Day%2520MCP%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D4cbb994%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:9925,\&quot;duration\&quot;:86.5,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:9925,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:10011.5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://ase.aliexpress.com/upload/web/info\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:14839.60000000894,\&quot;duration\&quot;:100.29999999701977,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:14839.60000000894,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:14939.90000000596,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://fourier.taobao.com/ts?url=https%3A%2F%2Fase.aliexpress.com%2Fupload%2Fweb%2Finfo&amp;token=BMXFMn9ZD7f4TytFfWbL-s-71AH_gnkUh2j0pccqs_wLXuXQj9cl5Ww4bZqoNZHM&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;ext=0\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:14840.5,\&quot;duration\&quot;:448.90000000596046,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:14840.5,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:15289.40000000596,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.bannerSliderDesktop?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.bannerSliderDesktop.d_3%26venture%3DBD%26bannerTitle%3D%2523Paid%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D44cccd8%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:15251.29999999702,\&quot;duration\&quot;:173.80000001192093,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:15251.29999999702,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:15425.10000000894,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]},{\&quot;name\&quot;:\&quot;https://sg.mmstat.com/lzdlp.tm80335411.bannerSliderDesktop?gmkey=EXP&amp;gokey=pc_i%3DkC587HTgwQpZgmoFPnLpTCBLKuwMCUyi%26pu_i%3D700000238955%26_hng%3DBD%257Cen-BD%257CBDT%257C050%26trackInfo%3D%26spm%3Da2a0e.tm80335411.bannerSliderDesktop.d_4%26venture%3DBD%26bannerTitle%3DWednesday%2520Glow!%26EXPARAMS%3D%26daraz_web_version%3D2.0.0%26st_page_id%3Dvjhkhcrlcaxazehj192285356a5228ba57981d8f23%26ps_i%3DlTPiKi7WFxIZbXRNzbbNcgKwAMsoRM5H%26_p_ref%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26_p_usertype%3Dreturning%26utm_origin%3Dhttps%3A%2F%2Fcart.daraz.com.bd%2F%26utm_channel%3DSEO%26ab_cookie%3D%26cache%3D4bd6d10%26jsver%3Daplus.js%26lver%3D1.6.1%26customSdkId%3D202980191_20210407_200201%26platformType%3Dpc%26tag%3D1%26stag%3D-1%26lstag%3D-1%26_g_encode%3Dutf-8%26_p_url%3Dhttps%253A%252F%252Fwww.daraz.com.bd%252F%253Fspm%253Da2o42.cart.header.dhome.55522829U3Cibf%2523%253F&amp;cna=vjhkH24crl4CAXazEh71JJEn&amp;spm-cnt=a2a0e.tm80335411.0.0.6d987bNQ7bNQRo&amp;spm-url=a2o42.cart.header.dhome.55522829U3Cibf&amp;logtype=2\&quot;,\&quot;entryType\&quot;:\&quot;resource\&quot;,\&quot;startTime\&quot;:20572.40000000596,\&quot;duration\&quot;:272.09999999403954,\&quot;initiatorType\&quot;:\&quot;img\&quot;,\&quot;deliveryType\&quot;:\&quot;\&quot;,\&quot;nextHopProtocol\&quot;:\&quot;\&quot;,\&quot;renderBlockingStatus\&quot;:\&quot;non-blocking\&quot;,\&quot;workerStart\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:20572.40000000596,\&quot;domainLookupStart\&quot;:0,\&quot;domainLookupEnd\&quot;:0,\&quot;connectStart\&quot;:0,\&quot;secureConnectionStart\&quot;:0,\&quot;connectEnd\&quot;:0,\&quot;requestStart\&quot;:0,\&quot;responseStart\&quot;:0,\&quot;firstInterimResponseStart\&quot;:0,\&quot;responseEnd\&quot;:20844.5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:0,\&quot;decodedBodySize\&quot;:0,\&quot;responseStatus\&quot;:0,\&quot;serverTiming\&quot;:[]}]&quot;,&quot;w_bl2&quot;:1727253402498.9,&quot;w_send_mode&quot;:&quot;beacon&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253428896&amp;sign=90631291261ca0dbd222a97959b72237&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">90631291261ca0dbd222a97959b72237</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253428896</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253428896&amp;sign=90631291261ca0dbd222a97959b72237&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">90631291261ca0dbd222a97959b72237</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253428896</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253429262&amp;sign=9a1377b184ff2db4b582276bc6131244&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_242%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_242&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">9a1377b184ff2db4b582276bc6131244</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253429262</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253429262&amp;sign=b19df2061f8b86fc1794ceafc43629fb&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">b19df2061f8b86fc1794ceafc43629fb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253429262</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">traffic</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fHWoaSGcfQ6f5t8PWPJ2TF8G9UN080kS2BTIJ/oEzCaSOd+UGQs09zJS5utXlCMGGSYJ9QUpNtrX8dBvslTVkug3lzVtrIwLffxu1sfgeN9j0g24ThfjEYXKB3AfXmgsqtqV35pdB/3u2NbieZKKfNL4tJd/6SPWYw0BVAlIKfqZWS4nXaDxwdmm5fGnxWpXffjq5P4wdjzCWPYnsoP8FSqnxxtz/ffJ2p8JuQFVgZWibvSG368HRCNXa7uD87PahLXF2bz9C17Z+QF0T4z2P/8xv3sRGRUT6Gza7ExVHkwDEBo1R7ZEr/QTbu1ZHVG9EAkdQFcVObyFzFeeZypDoQIH9szSVN+9jtJZ8gx2ch3uGegBaBJ3K0hyPv7Shx+yNw3FjbwTk4X5vlz97GqeO0+by9r2cPUwR7Snfwvkb+kRxDxsj+tnzMIb1guwzIQSb3mb3bgLg0jHR2JUhQy1k+Mk1gGTfFnGEz68pMJqRtGZTCZ9cCC0AxqYXibQV3tKt+/PFjlFXLGtTVQosyyasMJE/fUVs/DEHo7XADIbQwte7Qn3JKWndOXpKdEAkqjSrCEQjhRXSecpbQcBXPHvBjQWPl9yUwQxFKTnWMia8a4hO//C5ZOH3UJm+D2yfw/Tttx1C6mFj39/Fo6zYfd+49yV6oPQGtyb7P6lJp9WYt2n2gDFrsSP6D32fEwKcmP9SBNcw631HpbXtPcG+7HqQlAKUqvQUmHioMZnf0rE3TwtknVCjGC8KGkvq6e=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253429262&amp;sign=9a1377b184ff2db4b582276bc6131244&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221217891039_242%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1217891039_242&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">9a1377b184ff2db4b582276bc6131244</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253429262</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.com.bd/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1727253429262&amp;sign=b19df2061f8b86fc1794ceafc43629fb&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_BD&amp;x-i18n-regionID=bd&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">bd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">b19df2061f8b86fc1794ceafc43629fb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1727253429262</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_BD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;129&quot;, &quot;Not=A?Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;129&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">E:\Performance Testing Project\Daraz website performance testing\result.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
